{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://neo-calendar/modules/common/calendar-view.enum.ts","ng://neo-calendar/modules/common/calendar-event-emitter.service.ts","ng://neo-calendar/modules/common/calendar-event-actions.component.ts","ng://neo-calendar/modules/common/calendar-event-title.component.ts","ng://neo-calendar/modules/common/calendar-tooltip.directive.ts","ng://neo-calendar/date-adapters/date-adapter.ts","ng://neo-calendar/modules/common/util.ts","ng://neo-calendar/modules/common/calendar-previous-view.directive.ts","ng://neo-calendar/modules/common/calendar-event-times-changed-event.interface.ts","ng://neo-calendar/modules/common/calendar-next-view.directive.ts","ng://neo-calendar/modules/common/calendar-today.directive.ts","ng://neo-calendar/modules/common/calendar-angular-date-formatter.provider.ts","ng://neo-calendar/modules/common/calendar-date-formatter.provider.ts","ng://neo-calendar/modules/common/calendar-date.pipe.ts","ng://neo-calendar/modules/common/calendar-event-title-formatter.provider.ts","ng://neo-calendar/modules/common/calendar-event-title.pipe.ts","ng://neo-calendar/modules/common/click.directive.ts","ng://neo-calendar/modules/common/keydown-enter.directive.ts","ng://neo-calendar/modules/common/calendar-utils.provider.ts","ng://neo-calendar/modules/common/calendar-a11y.provider.ts","ng://neo-calendar/modules/common/calendar-a11y.pipe.ts","ng://neo-calendar/modules/common/calendar-moment-date-formatter.provider.ts","ng://neo-calendar/modules/common/calendar-native-date-formatter.provider.ts","ng://neo-calendar/modules/common/calendar-common.module.ts","ng://neo-calendar/modules/month/calendar-month-view.component.ts","ng://neo-calendar/modules/month/calendar-month-view-header.component.ts","ng://neo-calendar/modules/month/calendar-month-cell.component.ts","ng://neo-calendar/modules/month/calendar-open-day-events.component.ts","ng://neo-calendar/modules/month/calendar-month.module.ts","ng://neo-calendar/modules/common/calendar-drag-helper.provider.ts","ng://neo-calendar/modules/common/calendar-resize-helper.provider.ts","ng://neo-calendar/modules/week/calendar-week-view.component.ts","ng://neo-calendar/modules/week/calendar-week-view-header.component.ts","ng://neo-calendar/modules/week/calendar-week-view-event.component.ts","ng://neo-calendar/modules/week/calendar-week-view-hour-segment.component.ts","ng://neo-calendar/modules/week/calendar-week-view-current-time-marker.component.ts","ng://neo-calendar/modules/week/calendar-week.module.ts","ng://neo-calendar/modules/day/calendar-day-view.component.ts","ng://neo-calendar/modules/day/calendar-day.module.ts","ng://neo-calendar/modules/calendar-modal/calendar-modal.component.ts","ng://neo-calendar/modules/header/calendar-header.component.ts","ng://neo-calendar/modules/calendar-modal/calendar-modal.module.ts","ng://neo-calendar/modules/header/calendar-header.module.ts","ng://neo-calendar/date-adapters/date-fns/index.ts","ng://neo-calendar/modules/calendar.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","__spread","concat","CalendarView","EventEmitterService","eventChange","EventEmitter","emitNavChangeEvent","event","emit","getNavChangeEmitter","tslib_1.__decorate","Output","CalendarEventActionsComponent","eventEmitterService","trackByActionId","index","action","id","onEventClick","Input","Component","selector","template","CalendarEventTitleComponent","ngOnInit","CalendarTooltipWindowComponent","CalendarTooltipDirective","elementRef","injector","renderer","componentFactoryResolver","viewContainerRef","document","placement","delay","cancelTooltipDelay$","Subject","tooltipFactory","resolveComponentFactory","ngOnChanges","changes","tooltipRef","contents","customTemplate","instance","changeDetectorRef","markForCheck","ngOnDestroy","hide","onMouseOver","_this","of","timer","pipe","takeUntil","subscribe","show","onMouseOut","appendToBody","createComponent","body","appendChild","location","nativeElement","requestAnimationFrame","positionTooltip","remove","indexOf","hostView","previousPositions","detectChanges","positionElements","children","ElementRef","Injector","Renderer2","ComponentFactoryResolver","ViewContainerRef","Inject","args","DOCUMENT","HostListener","Directive","tslib_1.__param","validateEvents","events","validateEventsWithoutLog","_i","console","warn","isInside","outer","inner","Math","floor","left","ceil","right","top","bottom","roundToNearest","amount","precision","round","trackByEventId","trackByWeekDayHeaderDate","day","date","toISOString","trackByHourSegment","segment","trackByHour","hour","segments","trackByWeekAllDayEvent","weekEvent","trackByWeekTimeEvent","getPixelAmountInMinutes","hourSegments","hourSegmentHeight","getMinutesMoved","movedY","eventSnapSize","getDefaultEventEnd","dateAdapter","minimumMinutes","end","addMinutes","start","addDaysWithExclusions","days","excluded","daysCounter","daysToAdd","changeDays","subDays","addDays","result","abs","getDay","getWeekViewPeriod","viewDate","weekStartsOn","daysInWeek","viewStart","startOfDay","startOfWeek","endOfWeek","viewEnd","endOfDay","isWithinThreshold","_a","x","y","CalendarEventTimesChangedEventType","CalendarPreviousViewDirective","excludeDays","viewDateChange","viewChange","onClick","subFn","week","subWeeks","month","subMonths","view","Day","Week","DateAdapter","CalendarNextViewDirective","addFn","addWeeks","addMonths","CalendarTodayDirective","Date","CalendarAngularDateFormatter","monthViewColumnHeader","locale","formatDate","monthViewDayNumber","monthViewTitle","weekViewColumnHeader","weekViewColumnSubHeader","weekViewTitle","_b","format","dateToFormat","showYear","getUTCFullYear","weekViewHour","dayViewHour","dayViewTitle","Injectable","CalendarDateFormatter","_super","__","constructor","create","tslib_1.__extends","providedIn","CalendarDatePipe","dateFormatter","transform","method","allowedMethods","getOwnPropertyNames","getPrototypeOf","filter","iMethod","Error","join","LOCALE_ID","Pipe","name","CalendarEventTitleFormatter","title","monthTooltip","weekTooltip","dayTooltip","CalendarEventTitlePipe","calendarEventTitle","titleType","ClickDirective","elm","clickListenerDisabled","click","destroy$","listen","stopPropagation","Observable","observer","KeydownEnterDirective","keydown","onKeyPress","keyCode","which","preventDefault","CalendarUtils","getMonthView","getWeekViewHeader","getWeekView","CalendarA11y","i18nPlural","monthCell","badgeTotal","=0","=1","other","openDayEventsLandmark","openDayEventsAlert","eventDescription","allDay","allDayEventDescription","aria","actionButtonLabel","a11yLabel","monthCellTabIndex","hideMonthCellEvents","hideEventTitle","hideWeekHourSegment","hideDayHourSegment","I18nPluralPipe","CalendarA11yPipe","calendarA11y","a11yParams","MOMENT","InjectionToken","CalendarMomentDateFormatter","moment","CalendarNativeDateFormatter","Intl","DateTimeFormat","weekday","year","undefined","CalendarCommonModule","forRoot","config","ngModule","CalendarCommonModule_1","providers","eventTitleFormatter","utils","a11y","NgModule","declarations","imports","CommonModule","exports","entryComponents","CalendarMonthViewComponent","cdr","activeDayIsOpen","tooltipPlacement","tooltipAppendToBody","tooltipDelay","beforeViewRender","dayClicked","eventClicked","columnHeaderClicked","eventTimesChanged","trackByRowOffset","offset","slice","totalDaysVisibleInWeek","map","trackByDate","refresh","refreshSubscription","refreshAll","refreshHeader","weekendDays","refreshBody","emitBeforeViewRender","activeDay","checkActiveDayIsOpen","unsubscribe","toggleDayHighlight","isHighlighted","forEach","backgroundColor","color","secondary","eventDropped","droppedOn","draggedFrom","getYear","getMonth","getDate","newStart","setDate","setMonth","setYear","newEnd","secondsDiff","differenceInSeconds","addSeconds","type","Drop","columnHeaders","activeDay_1","openDay","find","isSameDay","openRowIndex","header","period","ChangeDetectorRef","CalendarMonthViewHeaderComponent","CalendarMonthCellComponent","highlightDay","unhighlightDay","validateDrag","host","class","[class.cal-past]","[class.cal-today]","[class.cal-future]","[class.cal-weekend]","[class.cal-in-month]","[class.cal-out-month]","[class.cal-has-events]","[class.cal-open]","[class.cal-event-highlight]","collapseAnimation","trigger","state","style","height","overflow","padding-top","padding-bottom","transition","animate","CalendarOpenDayEventsComponent","isOpen","animations","CalendarMonthModule","DragAndDropModule","MatIconModule","CalendarDragHelper","dragContainerElement","draggableElement","startPosition","getBoundingClientRect","snapDraggedEvents","dragAlreadyMoved","newRect","CalendarResizeHelper","resizeContainerElement","minWidth","validateResize","rectangle","width","CalendarWeekViewComponent","dayStartHour","dayStartMinute","dayEndHour","dayEndMinute","dayHeaderClicked","hourSegmentClicked","allDayEventResizes","Map","timeEventResizes","eventDragEnterByType","time","dragActive","calendarId","trackByHourColumn","column","hours","trackById","row","log","eventActionsTemplate","resizeStarted","eventsContainer","dayColumnWidth","getDayColumnWidth","resizeHelper","timeEventResizeStarted","timeEvent","resizeEvent","set","timeEventResizing","adjustedEvents","tempEvents","lastResizeEvent","newEventDates","getTimeEventResizedDates","adjustedEvent","eventIndex","restoreOriginalEvents","timeEventResizeEnded","get","delete","Resize","allDayEventResizeStarted","allDayEventsContainer","allDayEvent","originalOffset","originalSpan","span","edge","edges","allDayEventResizing","dayWidth","currentResize","diff","allDayEventResizeEnded","allDayEventResizingBeforeStart","daysDiff","eventRowContainer","offsetWidth","dateDragEnter","lastDragEnterDate","dropEvent","dropData","shouldFireDroppedEvent","getTime","dragEnter","dragLeave","dragStarted","dayEvent","dragHelper","size","hourColumns","linkedEvent","columnEvent","dragMove","dragEvent","newEventTimes","getDragMovedEventTimes","originalEvent_1","adjustedEvent_1","allDayEventDragMove","dragEnded","dragEndEvent","useY","isDraggedWithinPeriod","Drag","absolutePositionedEvents","dayStart","minute","dayEnd","segmentHeight","daysDragged","minutesMoved","previousView","adjustedEventsArray","has","columnIndex","hourIndex","segmentIndex","cssClass","originalEvent","existingColumnEvent","startsBeforeDay","endsAfterDay","clear","calendarEvent","minimumEventHeight","eventWithoutEnd","getOwnPropertySymbols","propertyIsEnumerable","__rest","smallestResizes","CalendarWeekViewHeaderComponent","CalendarWeekViewEventComponent","CalendarWeekViewHourSegmentComponent","CalendarWeekViewCurrentTimeMarkerComponent","zone","columnDate$","BehaviorSubject","columnDate","marker$","onStable","switchMap","interval","startWith","switchMapTo","setMinutes","setHours","hourHeightModifier","now","isVisible","differenceInMinutes","currentValue","NgZone","CalendarWeekModule","ResizableModule","provide","MatDialogRef","CalendarDayViewComponent","CalendarDayModule","CalendarModalComponent","dialogRef","data","screenType","titlePlaceholder","locationPlaceholder","descriptionPlaceholder","addEvents","FormGroup","FormControl","Validators","required","description","fromDate","toDate","fromTime","toTime","assignEventDetails","controls","setValue","addOrUpdateEvent","tempObject","close","onNoClick","onDelete","MAT_DIALOG_DATA","CalendarCommonHeaderComponent","dialog","setView","onAddEventClick","onEditEventClick","onDeleteEventClick","onAddEventSaveClick","showPreviousDayBtn","showTodayBtn","showNextDayBtn","showMonthBtn","showWeekBtn","showDayBtn","showAddEvent","showCaptureEventDialog","showEventDetailsDialog","page","openDialog","addEventSaveClick","editEventSaveClick","deleteEventClick","onViewChange","onViewDateChange","onSetView","addEventClick","customEventDialog","customCaptureEventDialog","open","afterClosed","MatDialog","ɵ1","CalendarCommonModalModule","MatFormFieldModule","MatInputModule","MatNativeDateModule","MatDatepickerModule","ReactiveFormsModule","MatDialogModule","MatSelectModule","MatToolbarModule","BrowserModule","BrowserAnimationsModule","NgxMaterialTimepickerModule","useValue","ɵ0","CalendarCommonHeaderModule","MatButtonModule","MatButtonToggleModule","schemas","CUSTOM_ELEMENTS_SCHEMA","adapterFactory","baseAdapterFactory","dateFns$1","getISOWeek","CalendarModule","useFactory","ɵ0$1"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export enum CalendarView {\n  Month = 'month',\n  Week = 'week',\n  Day = 'day'\n}\n","import { Injectable, EventEmitter, Output } from '@angular/core';\r\n\r\nexport class EventEmitterService {\r\n    \r\n  @Output() eventChange = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n  emitNavChangeEvent(value, event) {\r\n    this.eventChange.emit({value, event});\r\n  }\r\n\r\n  getNavChangeEmitter() {\r\n    return this.eventChange;\r\n  }\r\n}\r\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent, EventAction } from 'calendar-utils';\nimport { EventEmitterService } from './calendar-event-emitter.service'\n\n@Component({\n  selector: 'mwl-calendar-event-actions',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-trackByActionId=\"trackByActionId\"\n    >\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n        <span\n          class=\"cal-event-action material-icons\"\n          href=\"javascript:;\"\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event }); onEventClick(event, action.a11yLabel) \"\n          (mwlKeydownEnter)=\"\n            action.onClick({ event: event, sourceEvent: $event })\n          \"\n          [ngClass]=\"action.cssClass\"\n          tabindex=\"0\"\n          role=\"button\"\n          [attr.aria-label]=\"\n            { action: action } | calendarA11y: 'actionButtonLabel'\n          \"\n        >\n        {{action.label}}\n        </span>\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        trackByActionId: trackByActionId\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarEventActionsComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  constructor(public eventEmitterService: EventEmitterService){\n\n  }\n\n  trackByActionId = (index: number, action: EventAction) =>\n    action.id ? action.id : action;\n\n  onEventClick(event, action){\n    if(action === 'EDIT') {\n      this.eventEmitterService.emitNavChangeEvent('EDIT_EVENT_CLICKED', event);\n    }else if(action === 'DELETE') {\n      this.eventEmitterService.emitNavChangeEvent('DELETE_EVENT_CLICKED', event);\n    }\n  }\n}\n","import { Component, Input, TemplateRef, OnInit } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-title',\n  template: `\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\n      <span\n        class=\"event-title\"\n        [innerHTML]=\"event.title | calendarEventTitle: view:event\"\n        [attr.aria-hidden]=\"{} | calendarA11y: 'hideEventTitle'\"\n      >\n      </span>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarEventTitleComponent implements OnInit{\n \n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() view: string;\n\n  ngOnInit(): void {\n  }\n}\n","import {\n  Directive,\n  Component,\n  HostListener,\n  OnDestroy,\n  Input,\n  ComponentRef,\n  Injector,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ElementRef,\n  ComponentFactory,\n  Inject,\n  Renderer2,\n  TemplateRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { PlacementArray, positionElements } from 'positioning';\nimport { CalendarEvent } from 'calendar-utils';\nimport { Observable, of, Subject, timer } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'mwl-calendar-tooltip-window',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\"\n    >\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarTooltipWindowComponent {\n  @Input() contents: string;\n\n  @Input() placement: string;\n\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n\n@Directive({\n  selector: '[mwlCalendarTooltip]'\n})\nexport class CalendarTooltipDirective implements OnDestroy, OnChanges {\n  @Input('mwlCalendarTooltip') contents: string; // tslint:disable-line no-input-rename\n\n  @Input('tooltipPlacement') placement: PlacementArray = 'auto'; // tslint:disable-line no-input-rename\n\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // tslint:disable-line no-input-rename\n\n  @Input('tooltipEvent') event: CalendarEvent; // tslint:disable-line no-input-rename\n\n  @Input('tooltipAppendToBody') appendToBody: boolean; // tslint:disable-line no-input-rename\n\n  @Input('tooltipDelay') delay: number | null = null; // tslint:disable-line no-input-rename\n\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\n  private cancelTooltipDelay$ = new Subject();\n\n  constructor(\n    private elementRef: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\n      CalendarTooltipWindowComponent\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      this.tooltipRef &&\n      (changes.contents || changes.customTemplate || changes.event)\n    ) {\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      this.tooltipRef.changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseOver(): void {\n    const delay$: Observable<any> =\n      this.delay === null ? of('now') : timer(this.delay);\n    delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\n      this.show();\n    });\n  }\n\n  @HostListener('mouseleave')\n  onMouseOut(): void {\n    this.hide();\n  }\n\n  private show(): void {\n    if (!this.tooltipRef && this.contents && this.appendToBody) {\n      this.tooltipRef = this.viewContainerRef.createComponent(\n        this.tooltipFactory,\n        0,\n        this.injector,\n        []\n      );\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      if (this.appendToBody) {\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n      }\n      requestAnimationFrame(() => {\n        this.positionTooltip();\n      });\n    }\n  }\n\n  private hide(): void {\n    if (this.tooltipRef) {\n      this.viewContainerRef.remove(\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\n      );\n      this.tooltipRef = null;\n    }\n    this.cancelTooltipDelay$.next();\n  }\n\n  private positionTooltip(previousPositions: string[] = []): void {\n    if (this.tooltipRef) {\n      this.tooltipRef.changeDetectorRef.detectChanges();\n      this.tooltipRef.instance.placement = positionElements(\n        this.elementRef.nativeElement,\n        this.tooltipRef.location.nativeElement.children[0],\n        this.placement,\n        this.appendToBody\n      );\n      // keep re-positioning the tooltip until the arrow position doesn't make a difference\n      if (\n        previousPositions.indexOf(this.tooltipRef.instance.placement) === -1\n      ) {\n        this.positionTooltip([\n          ...previousPositions,\n          this.tooltipRef.instance.placement\n        ]);\n      }\n    }\n  }\n}\n","import { DateAdapter as BaseDateAdapter } from 'calendar-utils/date-adapters/date-adapter';\n\nexport abstract class DateAdapter implements BaseDateAdapter {\n  abstract addWeeks(date: Date | number, amount: number): Date;\n\n  abstract addMonths(date: Date | number, amount: number): Date;\n\n  abstract subDays(date: Date | number, amount: number): Date;\n\n  abstract subWeeks(date: Date | number, amount: number): Date;\n\n  abstract subMonths(date: Date | number, amount: number): Date;\n\n  abstract getISOWeek(date: Date | number): number;\n\n  abstract setDate(date: Date | number, dayOfMonth: number): Date;\n\n  abstract setMonth(date: Date | number, month: number): Date;\n\n  abstract setYear(date: Date | number, year: number): Date;\n\n  abstract getDate(date: Date | number): number;\n\n  abstract getMonth(date: Date | number): number;\n\n  abstract getYear(date: Date | number): number;\n\n  abstract addDays(date: Date | number, amount: number): Date;\n\n  abstract addHours(date: Date | number, amount: number): Date;\n\n  abstract addMinutes(date: Date | number, amount: number): Date;\n\n  abstract addSeconds(date: Date | number, amount: number): Date;\n\n  abstract differenceInDays(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): number;\n\n  abstract differenceInMinutes(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): number;\n\n  abstract differenceInSeconds(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): number;\n\n  abstract endOfDay(date: Date | number): Date;\n\n  abstract endOfMonth(date: Date | number): Date;\n\n  abstract endOfWeek(\n    date: Date | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getDay(date: Date | number): number;\n\n  abstract isSameDay(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): boolean;\n\n  abstract isSameMonth(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): boolean;\n\n  abstract isSameSecond(\n    dateLeft: Date | number,\n    dateRight: Date | number\n  ): boolean;\n\n  abstract max(dates: Array<Date | number>): Date;\n\n  abstract setHours(date: Date | number, hours: number): Date;\n\n  abstract setMinutes(date: Date | number, minutes: number): Date;\n\n  abstract startOfDay(date: Date | number): Date;\n\n  abstract startOfMinute(date: Date | number): Date;\n\n  abstract startOfMonth(date: Date | number): Date;\n\n  abstract startOfWeek(\n    date: Date | number,\n    options?: { weekStartsOn?: number }\n  ): Date;\n\n  abstract getHours(date: Date | number): number;\n\n  abstract getMinutes(date: Date | number): number;\n}\n","import {\n  CalendarEvent,\n  WeekViewTimeEvent,\n  WeekViewHour,\n  WeekViewHourSegment,\n  validateEvents as validateEventsWithoutLog,\n  ViewPeriod,\n  WeekDay,\n  WeekViewAllDayEvent\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const validateEvents = (events: CalendarEvent[]) => {\n  const warn = (...args) => console.warn('angular-calendar', ...args);\n  return validateEventsWithoutLog(events, warn);\n};\n\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    Math.floor(outer.left) <= Math.ceil(inner.left) &&\n    Math.floor(inner.left) <= Math.ceil(outer.right) &&\n    Math.floor(outer.left) <= Math.ceil(inner.right) &&\n    Math.floor(inner.right) <= Math.ceil(outer.right) &&\n    Math.floor(outer.top) <= Math.ceil(inner.top) &&\n    Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\n    Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\n    Math.floor(inner.bottom) <= Math.ceil(outer.bottom)\n  );\n}\n\nexport function roundToNearest(amount: number, precision: number) {\n  return Math.round(amount / precision) * precision;\n}\n\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\n  event.id ? event.id : event;\n\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\n  day.date.toISOString();\n\nexport const trackByHourSegment = (\n  index: number,\n  segment: WeekViewHourSegment\n) => segment.date.toISOString();\n\nexport const trackByHour = (index: number, hour: WeekViewHour) =>\n  hour.segments[0].date.toISOString();\n\nexport const trackByWeekAllDayEvent = (\n  index: number,\n  weekEvent: WeekViewAllDayEvent\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\n\nexport const trackByWeekTimeEvent = (\n  index: number,\n  weekEvent: WeekViewTimeEvent\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\n\nconst MINUTES_IN_HOUR = 60;\n\nfunction getPixelAmountInMinutes(\n  hourSegments: number,\n  hourSegmentHeight: number\n) {\n  return MINUTES_IN_HOUR / (hourSegments * hourSegmentHeight);\n}\n\nexport function getMinutesMoved(\n  movedY: number,\n  hourSegments: number,\n  hourSegmentHeight: number,\n  eventSnapSize: number\n): number {\n  const draggedInPixelsSnapSize = roundToNearest(\n    movedY,\n    eventSnapSize || hourSegmentHeight\n  );\n  const pixelAmountInMinutes = getPixelAmountInMinutes(\n    hourSegments,\n    hourSegmentHeight\n  );\n  return draggedInPixelsSnapSize * pixelAmountInMinutes;\n}\n\nexport function getMinimumEventHeightInMinutes(\n  hourSegments: number,\n  hourSegmentHeight: number\n) {\n  return (\n    getPixelAmountInMinutes(hourSegments, hourSegmentHeight) * hourSegmentHeight\n  );\n}\n\nexport function getDefaultEventEnd(\n  dateAdapter: DateAdapter,\n  event: CalendarEvent,\n  minimumMinutes: number\n): Date {\n  if (event.end) {\n    return event.end;\n  } else {\n    return dateAdapter.addMinutes(event.start, minimumMinutes);\n  }\n}\n\nexport function addDaysWithExclusions(\n  dateAdapter: DateAdapter,\n  date: Date,\n  days: number,\n  excluded: number[]\n): Date {\n  let daysCounter = 0;\n  let daysToAdd = 0;\n  const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\n  let result = date;\n  while (daysToAdd <= Math.abs(days)) {\n    result = changeDays(date, daysCounter);\n    const day = dateAdapter.getDay(result);\n    if (excluded.indexOf(day) === -1) {\n      daysToAdd++;\n    }\n    daysCounter++;\n  }\n  return result;\n}\n\nexport function isDraggedWithinPeriod(\n  newStart: Date,\n  newEnd: Date,\n  period: ViewPeriod\n): boolean {\n  const end = newEnd || newStart;\n  return (\n    (period.start <= newStart && newStart <= period.end) ||\n    (period.start <= end && end <= period.end)\n  );\n}\n\nexport function shouldFireDroppedEvent(\n  dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\n  date: Date,\n  allDay: boolean,\n  calendarId: symbol\n) {\n  return (\n    dropEvent.dropData &&\n    dropEvent.dropData.event &&\n    (dropEvent.dropData.calendarId !== calendarId ||\n      (dropEvent.dropData.event.allDay && !allDay) ||\n      (!dropEvent.dropData.event.allDay && allDay))\n  );\n}\n\nexport function getWeekViewPeriod(\n  dateAdapter: DateAdapter,\n  viewDate: Date,\n  weekStartsOn: number,\n  excluded: number[] = [],\n  daysInWeek?: number\n): { viewStart: Date; viewEnd: Date } {\n  let viewStart = daysInWeek\n    ? dateAdapter.startOfDay(viewDate)\n    : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\n  const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\n  while (\n    excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\n    viewStart < endOfWeek\n  ) {\n    viewStart = dateAdapter.addDays(viewStart, 1);\n  }\n  if (daysInWeek) {\n    const viewEnd = dateAdapter.endOfDay(\n      addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded)\n    );\n    return { viewStart, viewEnd };\n  } else {\n    let viewEnd = endOfWeek;\n    while (\n      excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\n      viewEnd > viewStart\n    ) {\n      viewEnd = dateAdapter.subDays(viewEnd, 1);\n    }\n    return { viewStart, viewEnd };\n  }\n}\n\nexport function isWithinThreshold({ x, y }: { x: number; y: number }) {\n  const DRAG_THRESHOLD = 1;\n  return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarPreviousView]'\n})\nexport class CalendarPreviousViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Days to skip when going back by 1 day\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will subtract this amount of days instead of 1 week\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  @Output() viewChange = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewChange.emit()\n    const subFn: any = {\n      day: this.dateAdapter.subDays,\n      week: this.dateAdapter.subWeeks,\n      month: this.dateAdapter.subMonths\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          -this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(subFn(this.viewDate, 1));\n    }\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\nexport enum CalendarEventTimesChangedEventType {\n  Drag = 'drag',\n  Drop = 'drop',\n  Resize = 'resize'\n}\n\n/**\n * The output `$event` type when an event is resized or dragged and dropped.\n */\nexport interface CalendarEventTimesChangedEvent<MetaType = any> {\n  type: CalendarEventTimesChangedEventType;\n  event: CalendarEvent<MetaType>;\n  newStart: Date;\n  newEnd?: Date;\n  allDay?: boolean;\n}\n","import {\n  Directive,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { CalendarView } from './calendar-view.enum';\nimport { addDaysWithExclusions } from './util';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarNextView]'\n})\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Days to skip when going forward by 1 day\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will add this amount of days instead of 1 week\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  @Output() viewChange = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewChange.emit()\n    const addFn: any = {\n      day: this.dateAdapter.addDays,\n      week: this.dateAdapter.addWeeks,\n      month: this.dateAdapter.addMonths\n    }[this.view];\n\n    if (this.view === CalendarView.Day) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          1,\n          this.excludeDays\n        )\n      );\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\n      this.viewDateChange.emit(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          this.viewDate,\n          this.daysInWeek,\n          this.excludeDays\n        )\n      );\n    } else {\n      this.viewDateChange.emit(addFn(this.viewDate, 1));\n    }\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarToday]'\n})\nexport class CalendarTodayDirective {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  constructor(private dateAdapter: DateAdapter) {}\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { formatDate } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\n@Injectable()\nexport class CalendarAngularDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEE', locale);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'd', locale);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'LLLL y', locale);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEE', locale);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return formatDate(date, 'MMM d', locale);\n  }\n\n  /**\n   * The week view title\n   */\n\n   \n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek, \n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'h a', locale);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'h a', locale);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return formatDate(date, 'EEEE, MMMM d, y', locale);\n  }\n}\n","import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\nimport { Injectable } from '@angular/core';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { formatDate } from '@angular/common';\n * import { Injectable } from '@angular/core';\n *\n * @Injectable()\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return formatDate(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\n@Injectable({\n    providedIn: 'root'\n  })\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n@Pipe({\n  name: 'calendarDate'\n})\nexport class CalendarDatePipe implements PipeTransform {\n  constructor(\n    private dateFormatter: CalendarDateFormatter,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(\n    date: Date,\n    method: string,\n    locale: string = this.locale,\n    weekStartsOn: number = 0,\n    excludeDays: number[] = [],\n    daysInWeek?: number\n  ): string {\n    if (typeof this.dateFormatter[method] === 'undefined') {\n      const allowedMethods = Object.getOwnPropertyNames(\n        Object.getPrototypeOf(CalendarDateFormatter.prototype)\n      ).filter(iMethod => iMethod !== 'constructor');\n      throw new Error(\n        `${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(\n          ', '\n        )}`\n      );\n    }\n    return this.dateFormatter[method]({\n      date,\n      locale,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    });\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\nimport { Injectable } from '@angular/core';\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { Injectable } from '@angular/core';\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * @Injectable()\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarEventTitleFormatter {\n  /**\n   * The month view event title.\n   */\n  month(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  monthTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event title.\n   */\n  week(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  weekTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event title.\n   */\n  day(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  dayTooltip(event: CalendarEvent, title: string): string {\n    return event.title;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\n\n@Pipe({\n  name: 'calendarEventTitle'\n})\nexport class CalendarEventTitlePipe implements PipeTransform {\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(title: string, titleType: string, event: CalendarEvent): string {\n    return this.calendarEventTitle[titleType](event, title);\n  }\n}\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Observable, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[mwlClick]'\n})\nexport class ClickDirective implements OnInit, OnDestroy {\n  @Input() clickListenerDisabled = false;\n\n  @Output('mwlClick') click = new EventEmitter<MouseEvent>(); // tslint:disable-line\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private renderer: Renderer2,\n    private elm: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) private document\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.clickListenerDisabled) {\n      this.listen()\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(event => {\n          event.stopPropagation();\n          this.click.emit(event);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n  }\n\n  private listen() {\n    return new Observable<MouseEvent>(observer => {\n      return this.renderer.listen(this.elm.nativeElement, 'click', event => {\n        observer.next(event);\n      });\n    });\n  }\n}\n","import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[mwlKeydownEnter]'\n})\nexport class KeydownEnterDirective {\n  @Output('mwlKeydownEnter') keydown = new EventEmitter<KeyboardEvent>(); // tslint:disable-line\n\n  @HostListener('keydown', ['$event'])\n  onKeyPress(event: KeyboardEvent) {\n    if (event.keyCode === 13 || event.which === 13 || event.key === 'Enter') {\n      event.preventDefault();\n      event.stopPropagation();\n      this.keydown.emit(event);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  GetMonthViewArgs,\n  MonthView,\n  GetWeekViewHeaderArgs,\n  WeekDay,\n  GetWeekViewArgs,\n  WeekView,\n  getMonthView,\n  getWeekViewHeader,\n  getWeekView\n} from 'calendar-utils';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n@Injectable()\nexport class CalendarUtils {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    return getMonthView(this.dateAdapter, args);\n  }\n\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\n    return getWeekViewHeader(this.dateAdapter, args);\n  }\n\n  getWeekView(args: GetWeekViewArgs): WeekView {\n    return getWeekView(this.dateAdapter, args);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { formatDate, I18nPluralPipe } from '@angular/common';\nimport { A11yParams } from './calendar-a11y.interface';\n\n/**\n * This class is responsible for adding accessibility to the calendar.\n * You may override any of its methods via angulars DI to suit your requirements.\n * For example:\n *\n * ```typescript\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\n * import { formatDate, I18nPluralPipe } from '@angular/common';\n * import { Injectable } from '@angular/core';\n *\n * // adding your own a11y params\n * export interface CustomA11yParams extends A11yParams {\n *   isDrSuess?: boolean;\n * }\n *\n * @Injectable()\n * export class CustomCalendarA11y extends CalendarA11y {\n *   constructor(protected i18nPlural: I18nPluralPipe) {\n *     super(i18nPlural);\n *   }\n *\n *   // overriding a function\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\n *     if (isDrSuess) {\n *       return `\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\n *          Today you are you! That is truer than true! There is no one alive\n *          who is you-er than you!\n *       `;\n *     }\n *   }\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *  provide: CalendarA11y,\n *  useClass: CustomCalendarA11y\n * }]\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CalendarA11y {\n  constructor(protected i18nPlural: I18nPluralPipe) {}\n\n  /**\n   * Aria label for the badges/date of a cell\n   * @example: `Saturday October 19 1 event click to expand`\n   */\n  public monthCell({ day, locale }: A11yParams): string {\n    if (day.badgeTotal > 0) {\n      return `\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\n        ${this.i18nPlural.transform(day.badgeTotal, {\n          '=0': 'No events',\n          '=1': 'One event',\n          other: '# events'\n        })},\n         click to expand\n      `;\n    } else {\n      return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\n    }\n  }\n\n  /**\n   * Aria label for the open day events start landmark\n   * @example: `Saturday October 19 expanded view`\n   */\n  public openDayEventsLandmark({ date, locale }: A11yParams): string {\n    return `\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\n    `;\n  }\n\n  /**\n   * Aria label for alert that a day in the month view was expanded\n   * @example: `Saturday October 19 expanded`\n   */\n  public openDayEventsAlert({ date, locale }: A11yParams): string {\n    return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\n  }\n\n  /**\n   * Descriptive aria label for an event\n   * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\n   */\n  public eventDescription({ event, locale }: A11yParams): string {\n    if (event.allDay === true) {\n      return this.allDayEventDescription({ event, locale });\n    }\n\n    const aria = `\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\n    `;\n    if (event.end) {\n      return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\n    }\n    return aria;\n  }\n\n  /**\n   * Descriptive aria label for an all day event\n   * @example:\n   * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\n   */\n  public allDayEventDescription({ event, locale }: A11yParams): string {\n    const aria = `\n      ${event.title}, event spans multiple days:\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\n    `;\n    if (event.end) {\n      return (\n        aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`\n      );\n    }\n    return aria + `, no stop time`;\n  }\n\n  /**\n   * Aria label for the calendar event actions icons\n   * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\n   */\n  public actionButtonLabel({ action }: A11yParams): string {\n    return action.a11yLabel;\n  }\n\n  /**\n   * @returns {number} Tab index to be given to month cells\n   */\n  public monthCellTabIndex(): number {\n    return 0;\n  }\n\n  /**\n   * @returns true if the events inside the month cell should be aria-hidden\n   */\n  public hideMonthCellEvents(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if event titles should be aria-hidden (global)\n   */\n  public hideEventTitle(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if hour segments in the week view should be aria-hidden\n   */\n  public hideWeekHourSegment(): boolean {\n    return true;\n  }\n\n  /**\n   * @returns true if hour segments in the day view should be aria-hidden\n   */\n  public hideDayHourSegment(): boolean {\n    return true;\n  }\n}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarA11y } from './calendar-a11y.provider';\nimport { A11yParams } from './calendar-a11y.interface';\n\n/**\n * This pipe is primarily for rendering aria labels. Example usage:\n * ```typescript\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\n * ```\n */\n@Pipe({\n  name: 'calendarA11y'\n})\nexport class CalendarA11yPipe implements PipeTransform {\n  constructor(\n    private calendarA11y: CalendarA11y,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(a11yParams: A11yParams, method: string): string {\n    a11yParams.locale = a11yParams.locale || this.locale;\n    if (typeof this.calendarA11y[method] === 'undefined') {\n      const allowedMethods = Object.getOwnPropertyNames(\n        Object.getPrototypeOf(CalendarA11y.prototype)\n      ).filter(iMethod => iMethod !== 'constructor');\n      throw new Error(\n        `${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(\n          ', '\n        )}`\n      );\n    }\n    return this.calendarA11y[method](a11yParams);\n  }\n}\n","import { InjectionToken, Inject, Injectable } from '@angular/core';\nimport {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { getWeekViewPeriod } from './util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\n\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\n@Injectable()\nexport class CalendarMomentDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * @hidden\n   */\n  constructor(\n    @Inject(MOMENT) protected moment: any,\n    protected dateAdapter: DateAdapter\n  ) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D');\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMMM YYYY');\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMM D');\n  }\n\n  /**\n   * The week view title\n   */\n \n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek\n    );\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      this.moment(dateToFormat)\n        .locale(locale)\n        .format('MMM D' + (showYear ? ', YYYY' : ''));\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd, D MMMM, YYYY');\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport { Injectable } from '@angular/core';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { getWeekViewPeriod } from './util';\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\n@Injectable()\nexport class CalendarNativeDateFormatter\n  implements CalendarDateFormatterInterface {\n  constructor(protected dateAdapter: DateAdapter) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'long'\n    }).format(date);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'short'\n    }).format(date);\n  }\n\n  /**\n   * The week view title\n   */\n  \n  public weekViewTitle({\n    date,\n    locale,\n    weekStartsOn,\n    excludeDays,\n    daysInWeek\n  }: DateFormatterParams): string {\n    const { viewStart, viewEnd } = getWeekViewPeriod(\n      this.dateAdapter,\n      date,\n      weekStartsOn,\n      excludeDays,\n      daysInWeek,\n    );\n\n    const format = (dateToFormat: Date, showYear: boolean) =>\n      new Intl.DateTimeFormat(locale, {\n        day: 'numeric',\n        month: 'short',\n        year: showYear ? 'numeric' : undefined\n      }).format(dateToFormat);\n\n    return `${format(\n      viewStart,\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\n    )} - ${format(viewEnd, true)}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the week view\n   */\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      weekday: 'long'\n    }).format(date);\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule, I18nPluralPipe } from '@angular/common';\nimport { CalendarEventActionsComponent } from './calendar-event-actions.component';\nimport { CalendarEventTitleComponent } from './calendar-event-title.component';\nimport {\n  CalendarTooltipDirective,\n  CalendarTooltipWindowComponent\n} from './calendar-tooltip.directive';\nimport { CalendarPreviousViewDirective } from './calendar-previous-view.directive';\nimport { CalendarNextViewDirective } from './calendar-next-view.directive';\nimport { CalendarTodayDirective } from './calendar-today.directive';\nimport { CalendarDatePipe } from './calendar-date.pipe';\nimport { CalendarEventTitlePipe } from './calendar-event-title.pipe';\nimport { ClickDirective } from './click.directive';\nimport { KeydownEnterDirective } from './keydown-enter.directive';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\nimport { CalendarUtils } from './calendar-utils.provider';\nimport { CalendarA11y } from './calendar-a11y.provider';\nimport { CalendarA11yPipe } from './calendar-a11y.pipe';\n\nexport interface CalendarModuleConfig {\n  eventTitleFormatter?: Provider;\n  dateFormatter?: Provider;\n  utils?: Provider;\n  a11y?: Provider;\n}\n\nexport * from './calendar-event-title-formatter.provider';\nexport * from './calendar-moment-date-formatter.provider';\nexport * from './calendar-native-date-formatter.provider';\nexport * from './calendar-angular-date-formatter.provider';\nexport * from './calendar-date-formatter.provider';\nexport * from './calendar-utils.provider';\nexport * from './calendar-a11y.provider';\nexport * from './calendar-a11y.interface';\nexport * from './calendar-date-formatter.interface';\nexport * from './calendar-event-times-changed-event.interface';\nexport * from '../../date-adapters/date-adapter';\nexport * from './calendar-view.enum';\n\nexport {\n  CalendarEvent,\n  EventAction as CalendarEventAction,\n  DAYS_OF_WEEK,\n  ViewPeriod as CalendarViewPeriod\n} from 'calendar-utils';\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    CalendarA11yPipe,\n    ClickDirective,\n    KeydownEnterDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    CalendarA11yPipe,\n    ClickDirective,\n    KeydownEnterDirective\n  ],\n  providers: [I18nPluralPipe,CalendarEventTitleFormatter,CalendarDateFormatter,CalendarUtils,CalendarA11y],\n  entryComponents: [CalendarTooltipWindowComponent]\n})\nexport class CalendarCommonModule {\n  static forRoot(\n    dateAdapter: Provider,\n    config: CalendarModuleConfig = {}\n  ): ModuleWithProviders {\n    return {\n      ngModule: CalendarCommonModule,\n      providers: [\n        dateAdapter,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils,\n        config.a11y || CalendarA11y\n      ]\n    };\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents } from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { PlacementArray } from 'positioning';\n\nexport interface CalendarMonthViewBeforeRenderEvent {\n  header: WeekDay[];\n  body: MonthViewDay[];\n  period: ViewPeriod;\n}\n\nexport interface CalendarMonthViewEventTimesChangedEvent<\n  EventMetaType = any,\n  DayMetaType = any\n> extends CalendarEventTimesChangedEvent<EventMetaType> {\n  day: MonthViewDay<DayMetaType>;\n}\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-month-view',\n  styleUrls: [\n    './calendar-month-view.scss'\n  ],\n  template: `\n    <div class=\"cal-month-view\" role=\"grid\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\n        [customTemplate]=\"headerTemplate\"\n        class=\"headerView\"\n      >\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div\n        id=\"cal-cell-day\"\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\n        >\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n\n              *ngFor=\"\n                let day of view.days\n                  | slice: rowIndex:rowIndex + view.totalDaysVisibleInWeek;\n                trackBy: trackByDate\n              \"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"cellTemplate\"\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\n              (mwlKeydownEnter)=\"\n                dayClicked.emit({ day: day, sourceEvent: $event })\n              \"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              dragOverClass=\"cal-drag-over\"\n              (drop)=\"\n                eventDropped(\n                  day,\n                  $event.dropData.event,\n                  $event.dropData.draggedFrom\n                )\n              \"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: $event.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n              [attr.tabindex]=\"{} | calendarA11y: 'monthCellTabIndex'\"\n            >\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [locale]=\"locale\"\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [date]=\"openDay?.date\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            [eventActionsTemplate]=\"eventActionsTemplate\"\n            (eventClicked)=\"\n              eventClicked.emit({\n                event: $event.event,\n                sourceEvent: $event.sourceEvent\n              })\n            \"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"\n              eventDropped(\n                openDay,\n                $event.dropData.event,\n                $event.dropData.draggedFrom\n              )\n            \"\n          >\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarMonthViewComponent\n  implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view.\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n  @Input() activeDayIsOpen: boolean = false;\n\n  /**\n   * If set will be used to determine the day that should be open. If not set, the `viewDate` is used\n   */\n  @Input() activeDay: Date;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\n   * will be displayed immediately.\n   */\n  @Input() tooltipDelay: number | null = null;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input() cellTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the slide down box of events for the active day\n   */\n  @Input() openDayEventsTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * An output that will be called before the view is rendered for the current month.\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output()\n  dayClicked = new EventEmitter<{\n    day: MonthViewDay;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when a header week day is clicked. Returns ISO day number.\n   */\n  @Output() columnHeaderClicked = new EventEmitter<{\n    isoDayNumber: number;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<\n    CalendarMonthViewEventTimesChangedEvent\n  >();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  trackByRowOffset = (index: number, offset: number) =>\n    this.view.days\n      .slice(offset, this.view.totalDaysVisibleInWeek)\n      .map(day => day.date.toISOString())\n      .join('-');\n\n  /**\n   * @hidden\n   */\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    protected dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    const refreshHeader =\n      changes.viewDate || changes.excludeDays || changes.weekendDays;\n    const refreshBody =\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.weekendDays;\n\n    if (refreshHeader) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (refreshBody) {\n      this.refreshBody();\n    }\n\n    if (refreshHeader || refreshBody) {\n      this.emitBeforeViewRender();\n    }\n\n    if (\n      changes.activeDayIsOpen ||\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.activeDay\n    ) {\n      this.checkActiveDayIsOpen();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach(day => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor =\n          (event.color && event.color.secondary) || '#D1E8FF';\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(\n    droppedOn: MonthViewDay,\n    event: CalendarEvent,\n    draggedFrom?: MonthViewDay\n  ): void {\n    if (droppedOn !== draggedFrom) {\n      const year: number = this.dateAdapter.getYear(droppedOn.date);\n      const month: number = this.dateAdapter.getMonth(droppedOn.date);\n      const date: number = this.dateAdapter.getDate(droppedOn.date);\n      const newStart: Date = this.dateAdapter.setDate(\n        this.dateAdapter.setMonth(\n          this.dateAdapter.setYear(event.start, year),\n          month\n        ),\n        date\n      );\n      let newEnd: Date;\n      if (event.end) {\n        const secondsDiff: number = this.dateAdapter.differenceInSeconds(\n          newStart,\n          event.start\n        );\n        newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\n      }\n      this.eventTimesChanged.emit({\n        event,\n        newStart,\n        newEnd,\n        day: droppedOn,\n        type: CalendarEventTimesChangedEventType.Drop\n      });\n    }\n  }\n\n  protected refreshHeader(): void {\n    this.columnHeaders = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n  }\n\n  protected refreshBody(): void {\n    this.view = this.utils.getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n  }\n\n  protected checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      const activeDay = this.activeDay || this.viewDate;\n      this.openDay = this.view.days.find(day =>\n        this.dateAdapter.isSameDay(day.date, activeDay)\n      );\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex =\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\n        this.view.totalDaysVisibleInWeek;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  protected refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n    this.emitBeforeViewRender();\n    this.checkActiveDayIsOpen();\n  }\n\n  protected emitBeforeViewRender(): void {\n    if (this.columnHeaders && this.view) {\n      this.beforeViewRender.emit({\n        header: this.columnHeaders,\n        body: this.view.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  TemplateRef,\n  EventEmitter,\n  Output\n} from '@angular/core';\nimport { WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-view-header', \n  styleUrls: ['./calendar-month-view.scss'],     \n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n    >\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\n        <div\n          class=\"cal-cell\"\n          id=\"cal-header-cell\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          (click)=\"\n            columnHeaderClicked.emit({\n              isoDayNumber: day.day,\n              sourceEvent: $event\n            })\n          \"\n          [ngClass]=\"day.cssClass\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          {{ day.date | calendarDate: 'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarMonthViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output() columnHeaderClicked = new EventEmitter<{\n    isoDayNumber: number;\n    sourceEvent: MouseEvent;\n  }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  OnInit\n} from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\nimport { isWithinThreshold, trackByEventId } from '../common/util';\nimport { PlacementArray } from 'positioning';\nimport { EventEmitterService } from '../common/calendar-event-emitter.service'\n\n@Component({\n  selector: 'mwl-calendar-month-cell',\n  styleUrls: ['./calendar-month-view.scss'],  \n  template: `\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-cell-top\"\n        id=\"date-cell\"\n        [attr.aria-label]=\"\n          { day: day, locale: locale } | calendarA11y: 'monthCell'\n        \"\n      >\n        <span aria-hidden=\"true\">\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\n            day.badgeTotal\n          }}</span>\n          <span class=\"cal-day-number\" id=\"day-number-view\">{{\n            day.date | calendarDate: 'monthViewDayNumber':locale\n          }}</span>\n        </span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\n          [ngStyle]=\"{'width': 100 + '%','height': 61 + 'px', 'border-radius': 0 + 'px','background-color': '#dcf8e9','display': 'flex', 'flex-direction': 'column','justify-content': 'center', 'border-left': '5px solid #58d395','margin-left': '0px','margin-right': '0px','margin-bottom': '0px' }\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\n          [mwlCalendarTooltip]=\"\n            event.title | calendarEventTitle: 'monthTooltip':event\n          \"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          [tooltipDelay]=\"tooltipDelay\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event, draggedFrom: day }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\n          [attr.aria-hidden]=\"{} | calendarA11y: 'hideMonthCellEvents'\"\n          (click) = \"onEventClick(event)\"\n        >\n        <p class=\"event-title\">{{event.start | date:'shortTime'}}</p>\n        <p class=\"event-title\">{{event.title}}</p>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDelay: tooltipDelay,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  `,\n  host: {\n    class: 'cal-cell cal-day-cell',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[class.cal-event-highlight]': '!!day.backgroundColor'\n  }\n})\nexport class CalendarMonthCellComponent {\n  @Input() day: MonthViewDay;\n\n  @Input() openDay: MonthViewDay;\n\n  @Input() locale: string;\n\n  @Input() tooltipPlacement: PlacementArray;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Input() tooltipDelay: number | null;\n\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n\n  validateDrag = isWithinThreshold;\n\n  constructor(public eventEmitterService: EventEmitterService){\n\n  }\n\n  onEventClick(event){\n      this.eventEmitterService.emitNavChangeEvent('EDIT_EVENT_CLICKED', event);\n  }\n  \n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  OnInit\n} from '@angular/core';\nimport {\n  trigger,\n  style,\n  state,\n  transition,\n  animate,\n  AnimationTriggerMetadata\n} from '@angular/animations';\nimport { CalendarEvent } from 'calendar-utils';\nimport { isWithinThreshold, trackByEventId } from '../common/util';\n\nexport const collapseAnimation: AnimationTriggerMetadata = trigger('collapse', [\n  state(\n    'void',\n    style({\n      height: 0,\n      overflow: 'hidden',\n      'padding-top': 0,\n      'padding-bottom': 0\n    })\n  ),\n  state(\n    '*',\n    style({\n      height: '*',\n      overflow: 'hidden',\n      'padding-top': '*',\n      'padding-bottom': '*'\n    })\n  ),\n  transition('* => void', animate('150ms ease-out')),\n  transition('void => *', animate('150ms ease-in'))\n]);\n\n@Component({\n  selector: 'mwl-calendar-open-day-events',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\"\n      let-isOpen=\"isOpen\"\n      let-trackByEventId=\"trackByEventId\"\n      let-validateDrag=\"validateDrag\"\n    >\n      <div\n        class=\"cal-open-day-events\"\n        [@collapse]\n        *ngIf=\"isOpen\"\n        role=\"application\"\n      >\n        <span\n          tabindex=\"-1\"\n          role=\"alert\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale } | calendarA11y: 'openDayEventsAlert'\n          \"\n        ></span>\n        <span\n          tabindex=\"0\"\n          role=\"landmark\"\n          [attr.aria-label]=\"\n            { date: date, locale: locale }\n              | calendarA11y: 'openDayEventsLandmark'\n          \"\n        ></span>\n        <div\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\n          [ngClass]=\"event?.cssClass\"\n          mwlDraggable\n          [class.cal-draggable]=\"event.draggable\"\n          dragActiveClass=\"cal-drag-active\"\n          [dropData]=\"{ event: event }\"\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\n          [validateDrag]=\"validateDrag\"\n        >\n          <span\n            class=\"cal-event\"\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\n          >\n          </span>\n          &ngsp;\n          <mwl-calendar-event-title\n            [event]=\"event\"\n            [customTemplate]=\"eventTitleTemplate\"\n            view=\"month\"\n            (mwlClick)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            (mwlKeydownEnter)=\"\n              eventClicked.emit({ event: event, sourceEvent: $event })\n            \"\n            tabindex=\"0\"\n            [attr.aria-label]=\"\n              { event: event, locale: locale }\n                | calendarA11y: 'eventDescription'\n            \"\n          >\n          </mwl-calendar-event-title>\n          &ngsp;\n          <mwl-calendar-event-actions\n            [event]=\"event\"\n            [customTemplate]=\"eventActionsTemplate\"\n          >\n          </mwl-calendar-event-actions>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        events: events,\n        eventClicked: eventClicked,\n        isOpen: isOpen,\n        trackByEventId: trackByEventId,\n        validateDrag: validateDrag\n      }\"\n    >\n    </ng-template>\n  `,\n  animations: [collapseAnimation]\n})\nexport class CalendarOpenDayEventsComponent implements OnInit{\n  \n  @Input() locale: string;\n\n  @Input() isOpen: boolean = false;\n\n  @Input() events: CalendarEvent[];\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Input() date: Date;\n\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n\n  validateDrag = isWithinThreshold;\n\n  ngOnInit(): void {\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarMonthViewComponent } from './calendar-month-view.component';\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view-header.component';\nimport { CalendarMonthCellComponent } from './calendar-month-cell.component';\nimport { CalendarOpenDayEventsComponent } from './calendar-open-day-events.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport {MatIconModule} from '@angular/material/icon';\n\nexport {\n  CalendarMonthViewComponent,\n  CalendarMonthViewBeforeRenderEvent,\n  CalendarMonthViewEventTimesChangedEvent\n} from './calendar-month-view.component';\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\nexport { collapseAnimation } from './calendar-open-day-events.component';\n\n@NgModule({\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule, MatIconModule],\n  declarations: [\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ],\n  exports: [\n    DragAndDropModule,\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ]\n})\nexport class CalendarMonthModule {}\n","import { isInside, isWithinThreshold } from './util';\nimport { ValidateDragParams } from 'angular-draggable-droppable';\n\nexport class CalendarDragHelper {\n  private readonly startPosition: ClientRect;\n\n  constructor(\n    private dragContainerElement: HTMLElement,\n    draggableElement: HTMLElement\n  ) {\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n\n  validateDrag({\n    x,\n    y,\n    snapDraggedEvents,\n    dragAlreadyMoved,\n    transform\n  }: {\n    x: number;\n    y: number;\n    snapDraggedEvents: boolean;\n    dragAlreadyMoved: boolean;\n    transform: ValidateDragParams['transform'];\n  }): boolean {\n    if (snapDraggedEvents) {\n      const newRect: ClientRect = Object.assign({}, this.startPosition, {\n        left: this.startPosition.left + transform.x,\n        right: this.startPosition.right + transform.x,\n        top: this.startPosition.top + transform.y,\n        bottom: this.startPosition.bottom + transform.y\n      });\n\n      return (\n        (isWithinThreshold({ x, y }) || dragAlreadyMoved) &&\n        isInside(this.dragContainerElement.getBoundingClientRect(), newRect)\n      );\n    } else {\n      return isWithinThreshold({ x, y }) || dragAlreadyMoved;\n    }\n  }\n}\n","import { isInside } from './util';\n\nexport class CalendarResizeHelper {\n  constructor(\n    private resizeContainerElement: HTMLElement,\n    private minWidth?: number\n  ) {}\n\n  validateResize({ rectangle }: { rectangle: ClientRect }): boolean {\n    if (\n      this.minWidth &&\n      Math.ceil(rectangle.width) < Math.ceil(this.minWidth)\n    ) {\n      return false;\n    }\n\n    return isInside(\n      this.resizeContainerElement.getBoundingClientRect(),\n      rectangle\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewAllDayEvent,\n  WeekView,\n  ViewPeriod,\n  WeekViewHourColumn,\n  WeekViewTimeEvent,\n  WeekViewHourSegment,\n  WeekViewHour,\n  WeekViewAllDayEventRow\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport {\n  CalendarEventTimesChangedEvent,\n  CalendarEventTimesChangedEventType\n} from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport {\n  validateEvents,\n  roundToNearest,\n  trackByWeekDayHeaderDate,\n  trackByHourSegment,\n  trackByHour,\n  getMinutesMoved,\n  getDefaultEventEnd,\n  getMinimumEventHeightInMinutes,\n  addDaysWithExclusions,\n  isDraggedWithinPeriod,\n  shouldFireDroppedEvent,\n  getWeekViewPeriod,\n  trackByWeekAllDayEvent,\n  trackByWeekTimeEvent\n} from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport {\n  DragEndEvent,\n  DropEvent,\n  DragMoveEvent,\n  ValidateDrag\n} from 'angular-draggable-droppable';\nimport { PlacementArray } from 'positioning';\n\nexport interface WeekViewAllDayEventResize {\n  originalOffset: number;\n  originalSpan: number;\n  edge: string;\n}\n\nexport interface CalendarWeekViewBeforeRenderEvent extends WeekView {\n  header: WeekDay[];\n}\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n@Component({   \n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\" role=\"grid\">\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"\n          eventDropped({ dropData: $event }, $event.newStart, true)\n        \"\n        (dragEnter)=\"dateDragEnter($event.date)\"\n      >\n      </mwl-calendar-week-view-header>\n      <div\n        class=\"cal-all-day-events\"\n        #allDayEventsContainer\n        *ngIf=\"view.allDayEventRows.length > 0\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('allDay')\"\n        (dragLeave)=\"dragLeave('allDay')\"\n      >\n        <div class=\"cal-day-columns\">\n          <div\n            class=\"cal-time-label-column\"\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\n          ></div>\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n            mwlDroppable\n            dragOverClass=\"cal-drag-over\"\n            (drop)=\"eventDropped($event, day.date, true)\"\n            (dragEnter)=\"dateDragEnter(day.date)\"\n          ></div>\n        </div>\n        <div\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\n          #eventRowContainer\n          class=\"cal-events-row\"\n        >\n          <div\n            *ngFor=\"\n              let allDayEvent of eventRow.row;\n              trackBy: trackByWeekAllDayEvent\n            \"\n            #event\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\n            \"\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\n            [ngClass]=\"allDayEvent.event?.cssClass\"\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\n            [style.marginLeft.%]=\"(100 / days.length) * allDayEvent.offset\"\n            mwlResizable\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\n            \"\n            (resizing)=\"\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\n            \"\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\n            mwlDraggable\n            dragActiveClass=\"cal-drag-active\"\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\n            [dragAxis]=\"{\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\n              y:\n                !snapDraggedEvents &&\n                allDayEvent.event.draggable &&\n                allDayEventResizes.size === 0\n            }\"\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\n            [validateDrag]=\"validateDrag\"\n            (dragStart)=\"dragStarted(eventRowContainer, event)\"\n            (dragging)=\"allDayEventDragMove()\"\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\n          >\n            <div\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.beforeStart &&\n                !allDayEvent.startsBeforeWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ left: true }\"\n            ></div>\n            <mwl-calendar-week-view-event\n              [locale]=\"locale\"\n              [weekEvent]=\"allDayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipDelay]=\"tooltipDelay\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              [eventActionsTemplate]=\"eventActionsTemplate\"\n              [daysInWeek]=\"daysInWeek\"\n              (eventClicked)=\"\n                eventClicked.emit({\n                  event: allDayEvent.event,\n                  sourceEvent: $event.sourceEvent\n                })\n              \"\n            >\n            </mwl-calendar-week-view-event>\n            <div\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\n              *ngIf=\"\n                allDayEvent.event?.resizable?.afterEnd &&\n                !allDayEvent.endsAfterWeek\n              \"\n              mwlResizeHandle\n              [resizeEdges]=\"{ right: true }\"\n            ></div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"cal-time-events\"\n        mwlDroppable\n        (dragEnter)=\"dragEnter('time')\"\n        (dragLeave)=\"dragLeave('time')\"\n      >\n        <div\n          class=\"cal-time-label-column\"\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\n        >\n          <div\n            *ngFor=\"\n              let hour of view.hourColumns[0].hours;\n              trackBy: trackByHour;\n              let odd = odd\n            \"\n            class=\"cal-hour\"\n            [class.cal-hour-odd]=\"odd\"\n          >\n            <mwl-calendar-week-view-hour-segment\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\n              [style.height.px]=\"hourSegmentHeight\"\n              [segment]=\"segment\"\n              [segmentHeight]=\"hourSegmentHeight\"\n              [locale]=\"locale\"\n              [customTemplate]=\"hourSegmentTemplate\"\n              [isTimeLabel]=\"true\"\n              [daysInWeek]=\"daysInWeek\"\n            >\n            </mwl-calendar-week-view-hour-segment>\n          </div>\n        </div>\n        <div\n          class=\"cal-day-columns\"\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\n          #dayColumns\n        >\n          <div\n            class=\"cal-day-column\"\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\n          >\n            <mwl-calendar-week-view-current-time-marker\n              [columnDate]=\"column.date\"\n              [dayStartHour]=\"dayStartHour\"\n              [dayStartMinute]=\"dayStartMinute\"\n              [dayEndHour]=\"dayEndHour\"\n              [dayEndMinute]=\"dayEndMinute\"\n              [hourSegments]=\"hourSegments\"\n              [hourSegmentHeight]=\"hourSegmentHeight\"\n              [customTemplate]=\"currentTimeMarkerTemplate\"\n            ></mwl-calendar-week-view-current-time-marker>\n            <div class=\"cal-events-container\">\n              <div\n                *ngFor=\"\n                  let timeEvent of column.events;\n                  trackBy: trackByWeekTimeEvent\n                \"\n                #event\n                class=\"cal-event-container\"\n                [class.cal-draggable]=\"\n                  timeEvent.event.draggable && timeEventResizes.size === 0\n                \"\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\n                [ngClass]=\"timeEvent.event.cssClass\"\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\n                [style.top.px]=\"timeEvent.top\"\n                [style.height.px]=\"timeEvent.height\"\n                [style.left.%]=\"timeEvent.left\"\n                [style.width.%]=\"timeEvent.width\"\n                mwlResizable\n                [resizeSnapGrid]=\"{\n                  left: dayColumnWidth,\n                  right: dayColumnWidth,\n                  top: eventSnapSize || hourSegmentHeight,\n                  bottom: eventSnapSize || hourSegmentHeight\n                }\"\n                [validateResize]=\"validateResize\"\n                [allowNegativeResizes]=\"true\"\n                (resizeStart)=\"\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\n                \"\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\n                mwlDraggable\n                dragActiveClass=\"cal-drag-active\"\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\n                [dragAxis]=\"{\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\n                }\"\n                [dragSnapGrid]=\"\n                  snapDraggedEvents\n                    ? {\n                        x: dayColumnWidth,\n                        y: eventSnapSize || hourSegmentHeight\n                      }\n                    : {}\n                \"\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\n                [validateDrag]=\"validateDrag\"\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent)\"\n                (dragging)=\"dragMove(timeEvent, $event)\"\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\n              >\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.beforeStart &&\n                    !timeEvent.startsBeforeDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    left: true,\n                    top: true\n                  }\"\n                ></div>\n                <mwl-calendar-week-view-event\n                  [locale]=\"locale\"\n                  [weekEvent]=\"timeEvent\"\n                  [tooltipPlacement]=\"tooltipPlacement\"\n                  [tooltipTemplate]=\"tooltipTemplate\"\n                  [tooltipAppendToBody]=\"tooltipAppendToBody\"\n                  [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\n                  [tooltipDelay]=\"tooltipDelay\"\n                  [customTemplate]=\"eventTemplate\"\n                  [eventTitleTemplate]=\"eventTitleTemplate\"\n                  [eventActionsTemplate]=\"eventActionsTemplate\"\n                  [column]=\"column\"\n                  [daysInWeek]=\"daysInWeek\"\n                  (eventClicked)=\"\n                    eventClicked.emit({\n                      event: timeEvent.event,\n                      sourceEvent: $event.sourceEvent\n                    })\n                  \"\n                >\n                </mwl-calendar-week-view-event>\n                <div\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\n                  *ngIf=\"\n                    timeEvent.event?.resizable?.afterEnd &&\n                    !timeEvent.endsAfterDay\n                  \"\n                  mwlResizeHandle\n                  [resizeEdges]=\"{\n                    right: true,\n                    bottom: true\n                  }\"\n                ></div>\n              </div>\n            </div>\n\n            <div\n              *ngFor=\"\n                let hour of column.hours;\n                trackBy: trackByHour;\n                let odd = odd\n              \"\n              class=\"cal-hour\"\n              [class.cal-hour-odd]=\"odd\"\n            >\n              <mwl-calendar-week-view-hour-segment\n                *ngFor=\"\n                  let segment of hour.segments;\n                  trackBy: trackByHourSegment\n                \"\n                [style.height.px]=\"hourSegmentHeight\"\n                [segment]=\"segment\"\n                [segmentHeight]=\"hourSegmentHeight\"\n                [locale]=\"locale\"\n                [customTemplate]=\"hourSegmentTemplate\"\n                [daysInWeek]=\"daysInWeek\"\n                (mwlClick)=\"\n                  hourSegmentClicked.emit({\n                    date: segment.date,\n                    sourceEvent: $event\n                  })\n                \"\n                [clickListenerDisabled]=\"\n                  hourSegmentClicked.observers.length === 0\n                \"\n                mwlDroppable\n                [dragOverClass]=\"\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\n                \"\n                dragActiveClass=\"cal-drag-active\"\n                (drop)=\"eventDropped($event, segment.date, false)\"\n                (dragEnter)=\"dateDragEnter(segment.date)\"\n                [isTimeLabel]=\"daysInWeek === 1\"\n              >\n              </mwl-calendar-week-view-hour-segment>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\n   * will be displayed immediately.\n   */\n  @Input() tooltipDelay: number | null = null;\n\n  /**\n   * The start number of the week.\n   * This is ignored when the `daysInWeek` input is also set as the `viewDate` will be used as the start of the week instead.\n   * Note, you should also pass this to the calendar title pipe so it shows the same days: {{ viewDate | calendarDate:(view + 'ViewTitle'):locale:weekStartsOn }}\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input() precision: 'days' | 'minutes' = 'days';\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input() snapDraggedEvents: boolean = true;\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 60;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * The grid size to snap resizing and dragging of hourly events to\n   */\n  @Input() eventSnapSize: number;\n\n  /**\n   * A custom template to use for the all day events label text\n   */\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\n\n  /**\n   * The number of days in a week. Can be used to create a shorter or longer week view.\n   * The first day of the week will always be the `viewDate` and `weekStartsOn` if set will be ignored\n   */\n  @Input() daysInWeek: number;\n\n  /**\n   * A custom template to use for the current time marker\n   */\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\n\n  /**\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n   */\n  @Output()\n  dayHeaderClicked = new EventEmitter<{\n    day: WeekDay;\n    sourceEvent: MouseEvent;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current week.\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n    sourceEvent: MouseEvent;\n  }>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: WeekView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  allDayEventResizes: Map<\n    WeekViewAllDayEvent,\n    WeekViewAllDayEventResize\n  > = new Map();\n\n  /**\n   * @hidden\n   */\n  timeEventResizes: Map<CalendarEvent, ResizeEvent> = new Map();\n\n  /**\n   * @hidden\n   */\n  eventDragEnterByType = {\n    allDay: 0,\n    time: 0\n  };\n\n  /**\n   * @hidden\n   */\n  dragActive = false;\n\n  /**\n   * @hidden\n   */\n  dragAlreadyMoved = false;\n\n  /**\n   * @hidden\n   */\n  validateDrag: ValidateDrag;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  dayColumnWidth: number;\n\n  /**\n   * @hidden\n   */\n  calendarId = Symbol('angular calendar week view id');\n\n  /**\n   * @hidden\n   */\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = trackByHourSegment;\n\n  /**\n   * @hidden\n   */\n  trackByHour = trackByHour;\n\n  /**\n   * @hidden\n   */\n  trackByWeekAllDayEvent = trackByWeekAllDayEvent;\n\n  /**\n   * @hidden\n   */\n  trackByWeekTimeEvent = trackByWeekTimeEvent;\n\n  /**\n   * @hidden\n   */\n  private lastDragEnterDate: Date;\n\n  /**\n   * @hidden\n   */\n  trackByHourColumn = (index: number, column: WeekViewHourColumn) =>\n    column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\n\n  /**\n   * @hidden\n   */\n  trackById = (index: number, row: WeekViewAllDayEventRow) => row.id;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    protected cdr: ChangeDetectorRef,\n    protected utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string,\n    protected dateAdapter: DateAdapter\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n\n    console.log(\"eventActionsTemplate\", this.eventActionsTemplate)\n  }\n\n  page:'other';\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    const refreshHeader =\n      changes.viewDate ||\n      changes.excludeDays ||\n      changes.weekendDays ||\n      changes.daysInWeek ||\n      changes.weekStartsOn;\n\n    const refreshBody =\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments ||\n      changes.weekStartsOn ||\n      changes.weekendDays ||\n      changes.excludeDays ||\n      changes.hourSegmentHeight ||\n      changes.events ||\n      changes.daysInWeek;\n\n    if (refreshHeader) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (refreshBody) {\n      this.refreshBody();\n    }\n\n    if (refreshHeader || refreshBody) {\n      this.emitBeforeViewRender();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  protected resizeStarted(eventsContainer: HTMLElement, minWidth?: number) {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      eventsContainer,\n      minWidth\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeStarted(\n    eventsContainer: HTMLElement,\n    timeEvent: WeekViewTimeEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    this.resizeStarted(eventsContainer);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizing(timeEvent: WeekViewTimeEvent, resizeEvent: ResizeEvent) {\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\n    const adjustedEvents = new Map<CalendarEvent, CalendarEvent>();\n\n    const tempEvents = [...this.events];\n\n    this.timeEventResizes.forEach((lastResizeEvent, event) => {\n      const newEventDates = this.getTimeEventResizedDates(\n        event,\n        lastResizeEvent\n      );\n      const adjustedEvent = { ...event, ...newEventDates };\n      adjustedEvents.set(adjustedEvent, event);\n      const eventIndex = tempEvents.indexOf(event);\n      tempEvents[eventIndex] = adjustedEvent;\n    });\n\n    this.restoreOriginalEvents(tempEvents, adjustedEvents);\n  }\n\n  /**\n   * @hidden\n   */\n  timeEventResizeEnded(timeEvent: WeekViewTimeEvent) {\n    this.view = this.getWeekView(this.events);\n    const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\n    if (lastResizeEvent) {\n      this.timeEventResizes.delete(timeEvent.event);\n      const newEventDates = this.getTimeEventResizedDates(\n        timeEvent.event,\n        lastResizeEvent\n      );\n      this.eventTimesChanged.emit({\n        newStart: newEventDates.start,\n        newEnd: newEventDates.end,\n        event: timeEvent.event,\n        type: CalendarEventTimesChangedEventType.Resize\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeStarted(\n    allDayEventsContainer: HTMLElement,\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.allDayEventResizes.set(allDayEvent, {\n      originalOffset: allDayEvent.offset,\n      originalSpan: allDayEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n    });\n    this.resizeStarted(\n      allDayEventsContainer,\n      this.getDayColumnWidth(allDayEventsContainer)\n    );\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizing(\n    allDayEvent: WeekViewAllDayEvent,\n    resizeEvent: ResizeEvent,\n    dayWidth: number\n  ): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    if (typeof resizeEvent.edges.left !== 'undefined') {\n      const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n      allDayEvent.offset = currentResize.originalOffset + diff;\n      allDayEvent.span = currentResize.originalSpan - diff;\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\n      const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n      allDayEvent.span = currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventResizeEnded(allDayEvent: WeekViewAllDayEvent): void {\n    const currentResize: WeekViewAllDayEventResize = this.allDayEventResizes.get(\n      allDayEvent\n    );\n\n    if (currentResize) {\n      const allDayEventResizingBeforeStart = currentResize.edge === 'left';\n      let daysDiff: number;\n      if (allDayEventResizingBeforeStart) {\n        daysDiff = allDayEvent.offset - currentResize.originalOffset;\n      } else {\n        daysDiff = allDayEvent.span - currentResize.originalSpan;\n      }\n\n      allDayEvent.offset = currentResize.originalOffset;\n      allDayEvent.span = currentResize.originalSpan;\n\n      let newStart: Date = allDayEvent.event.start;\n      let newEnd: Date = allDayEvent.event.end || allDayEvent.event.start;\n      if (allDayEventResizingBeforeStart) {\n        newStart = addDaysWithExclusions(\n          this.dateAdapter,\n          newStart,\n          daysDiff,\n          this.excludeDays\n        );\n      } else {\n        newEnd = addDaysWithExclusions(\n          this.dateAdapter,\n          newEnd,\n          daysDiff,\n          this.excludeDays\n        );\n      }\n\n      this.eventTimesChanged.emit({\n        newStart,\n        newEnd,\n        event: allDayEvent.event,\n        type: CalendarEventTimesChangedEventType.Resize\n      });\n      this.allDayEventResizes.delete(allDayEvent);\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  dateDragEnter(date: Date) {\n    this.lastDragEnterDate = date;\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(\n    dropEvent: DropEvent<{ event?: CalendarEvent; calendarId?: symbol }>,\n    date: Date,\n    allDay: boolean\n  ): void {\n    if (\n      shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\n      this.lastDragEnterDate.getTime() === date.getTime()\n    ) {\n      this.eventTimesChanged.emit({\n        type: CalendarEventTimesChangedEventType.Drop,\n        event: dropEvent.dropData.event,\n        newStart: date,\n        allDay\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  dragEnter(type: 'allDay' | 'time') {\n    this.eventDragEnterByType[type]++;\n  }\n\n  /**\n   * @hidden\n   */\n  dragLeave(type: 'allDay' | 'time') {\n    this.eventDragEnterByType[type]--;\n  }\n\n  /**\n   * @hidden\n   */\n  dragStarted(\n    eventsContainer: HTMLElement,\n    event: HTMLElement,\n    dayEvent?: WeekViewTimeEvent\n  ): void {\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      eventsContainer,\n      event\n    );\n    this.validateDrag = ({ x, y, transform }) =>\n      this.allDayEventResizes.size === 0 &&\n      this.timeEventResizes.size === 0 &&\n      dragHelper.validateDrag({\n        x,\n        y,\n        snapDraggedEvents: this.snapDraggedEvents,\n        dragAlreadyMoved: this.dragAlreadyMoved,\n        transform\n      });\n    this.dragActive = true;\n    this.dragAlreadyMoved = false;\n    this.eventDragEnterByType = {\n      allDay: 0,\n      time: 0\n    };\n    if (!this.snapDraggedEvents && dayEvent) {\n      this.view.hourColumns.forEach(column => {\n        const linkedEvent = column.events.find(\n          columnEvent =>\n            columnEvent.event === dayEvent.event && columnEvent !== dayEvent\n        );\n        // hide any linked events while dragging\n        if (linkedEvent) {\n          linkedEvent.width = 0;\n          linkedEvent.height = 0;\n        }\n      });\n    }\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  dragMove(dayEvent: WeekViewTimeEvent, dragEvent: DragMoveEvent) {\n    if (this.snapDraggedEvents) {\n      const newEventTimes = this.getDragMovedEventTimes(\n        dayEvent,\n        dragEvent,\n        this.dayColumnWidth,\n        true\n      );\n      const originalEvent = dayEvent.event;\n      const adjustedEvent = { ...originalEvent, ...newEventTimes };\n      const tempEvents = this.events.map(event => {\n        if (event === originalEvent) {\n          return adjustedEvent;\n        }\n        return event;\n      });\n      this.restoreOriginalEvents(\n        tempEvents,\n        new Map([[adjustedEvent, originalEvent]])\n      );\n    }\n    this.dragAlreadyMoved = true;\n  }\n\n  /**\n   * @hidden\n   */\n  allDayEventDragMove() {\n    this.dragAlreadyMoved = true;\n  }\n\n  /**\n   * @hidden\n   */\n  dragEnded(\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\n    dragEndEvent: DragEndEvent,\n    dayWidth: number,\n    useY = false\n  ): void {\n    this.view = this.getWeekView(this.events);\n    this.dragActive = false;\n    const { start, end } = this.getDragMovedEventTimes(\n      weekEvent,\n      dragEndEvent,\n      dayWidth,\n      useY\n    );\n    if (\n      this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0 &&\n      isDraggedWithinPeriod(start, end, this.view.period)\n    ) {\n      this.eventTimesChanged.emit({\n        newStart: start,\n        newEnd: end,\n        event: weekEvent.event,\n        type: CalendarEventTimesChangedEventType.Drag,\n        allDay: !useY\n      });\n    }\n  }\n\n  protected refreshHeader(): void {\n    this.days = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      )\n    });\n  }\n\n  protected refreshBody(): void {\n    this.view = this.getWeekView(this.events);\n  }\n\n  protected refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n    this.emitBeforeViewRender();\n  }\n\n  protected emitBeforeViewRender(): void {\n    if (this.days && this.view) {\n      this.beforeViewRender.emit({\n        header: this.days,\n        ...this.view\n      });\n    }\n  }\n\n  protected getWeekView(events: CalendarEvent[]) {\n    return this.utils.getWeekView({\n      events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      segmentHeight: this.hourSegmentHeight,\n      weekendDays: this.weekendDays,\n      ...getWeekViewPeriod(\n        this.dateAdapter,\n        this.viewDate,\n        this.weekStartsOn,\n        this.excludeDays,\n        this.daysInWeek\n      )\n    });\n  }\n\n  protected getDragMovedEventTimes(\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\n    dragEndEvent: DragEndEvent | DragMoveEvent,\n    dayWidth: number,\n    useY: boolean\n  ) {\n    const daysDragged = roundToNearest(dragEndEvent.x, dayWidth) / dayWidth;\n    const minutesMoved = useY\n      ? getMinutesMoved(\n          dragEndEvent.y,\n          this.hourSegments,\n          this.hourSegmentHeight,\n          this.eventSnapSize\n        )\n      : 0;\n\n    const start = this.dateAdapter.addMinutes(\n      addDaysWithExclusions(\n        this.dateAdapter,\n        weekEvent.event.start,\n        daysDragged,\n        this.excludeDays\n      ),\n      minutesMoved\n    );\n    let end: Date;\n    if (weekEvent.event.end) {\n      end = this.dateAdapter.addMinutes(\n        addDaysWithExclusions(\n          this.dateAdapter,\n          weekEvent.event.end,\n          daysDragged,\n          this.excludeDays\n        ),\n        minutesMoved\n      );\n    }\n\n    return { start, end };\n  }\n\n  protected restoreOriginalEvents(\n    tempEvents: CalendarEvent[],\n    adjustedEvents: Map<CalendarEvent, CalendarEvent>\n  ) {\n    const previousView = this.view;\n    this.view = this.getWeekView(tempEvents);\n    const adjustedEventsArray = tempEvents.filter(event =>\n      adjustedEvents.has(event)\n    );\n    this.view.hourColumns.forEach((column, columnIndex) => {\n      previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\n        hour.segments.forEach((segment, segmentIndex) => {\n          column.hours[hourIndex].segments[segmentIndex].cssClass =\n            segment.cssClass;\n        });\n      });\n      adjustedEventsArray.forEach(adjustedEvent => {\n        const originalEvent = adjustedEvents.get(adjustedEvent);\n        const existingColumnEvent = column.events.find(\n          columnEvent => columnEvent.event === adjustedEvent\n        );\n        if (existingColumnEvent) {\n          // restore the original event so trackBy kicks in and the dom isn't changed\n          existingColumnEvent.event = originalEvent;\n        } else {\n          // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\n          column.events.push({\n            event: originalEvent,\n            left: 0,\n            top: 0,\n            height: 0,\n            width: 0,\n            startsBeforeDay: false,\n            endsAfterDay: false\n          });\n        }\n      });\n    });\n    adjustedEvents.clear();\n  }\n\n  protected getTimeEventResizedDates(\n    calendarEvent: CalendarEvent,\n    resizeEvent: ResizeEvent\n  ) {\n    const minimumEventHeight = getMinimumEventHeightInMinutes(\n      this.hourSegments,\n      this.hourSegmentHeight\n    );\n    const newEventDates = {\n      start: calendarEvent.start,\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        calendarEvent,\n        minimumEventHeight\n      )\n    };\n    const { end, ...eventWithoutEnd } = calendarEvent;\n    const smallestResizes = {\n      start: this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minimumEventHeight * -1\n      ),\n      end: getDefaultEventEnd(\n        this.dateAdapter,\n        eventWithoutEnd,\n        minimumEventHeight\n      )\n    };\n\n    if (typeof resizeEvent.edges.left !== 'undefined') {\n      const daysDiff = Math.round(\n        +resizeEvent.edges.left / this.dayColumnWidth\n      );\n      const newStart = addDaysWithExclusions(\n        this.dateAdapter,\n        newEventDates.start,\n        daysDiff,\n        this.excludeDays\n      );\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\n      const daysDiff = Math.round(\n        +resizeEvent.edges.right / this.dayColumnWidth\n      );\n      const newEnd = addDaysWithExclusions(\n        this.dateAdapter,\n        newEventDates.end,\n        daysDiff,\n        this.excludeDays\n      );\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    if (typeof resizeEvent.edges.top !== 'undefined') {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.top as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      const newStart = this.dateAdapter.addMinutes(\n        newEventDates.start,\n        minutesMoved\n      );\n      if (newStart < smallestResizes.start) {\n        newEventDates.start = newStart;\n      } else {\n        newEventDates.start = smallestResizes.start;\n      }\n    } else if (typeof resizeEvent.edges.bottom !== 'undefined') {\n      const minutesMoved = getMinutesMoved(\n        resizeEvent.edges.bottom as number,\n        this.hourSegments,\n        this.hourSegmentHeight,\n        this.eventSnapSize\n      );\n      const newEnd = this.dateAdapter.addMinutes(\n        newEventDates.end,\n        minutesMoved\n      );\n      if (newEnd > smallestResizes.end) {\n        newEventDates.end = newEnd;\n      } else {\n        newEventDates.end = smallestResizes.end;\n      }\n    }\n\n    return newEventDates;\n  }\n}\n\n// [eventActionsTemplate]=\"eventActionsTemplate\"\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-week-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\"\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\n      let-dragEnter=\"dragEnter\"\n    >\n      <div class=\"cal-day-headers\" role=\"row\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\n          mwlDroppable\n          dragOverClass=\"cal-drag-over\"\n          (drop)=\"\n            eventDropped.emit({\n              event: $event.dropData.event,\n              newStart: day.date\n            })\n          \"\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\n          tabindex=\"0\"\n          role=\"columnheader\"\n        >\n          <div class=\"week-header-day\">\n            {{ day.date | calendarDate: 'weekViewColumnHeader':locale }}\n          </div>\n          <div class=\"week-header-date\">\n            {{day.date | calendarDate: 'weekViewColumnSubHeader':locale}}\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        days: days,\n        locale: locale,\n        dayHeaderClicked: dayHeaderClicked,\n        eventDropped: eventDropped,\n        dragEnter: dragEnter,\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output() dayHeaderClicked = new EventEmitter<{\n    day: WeekDay;\n    sourceEvent: MouseEvent;\n  }>();\n\n  @Output() eventDropped = new EventEmitter<{\n    event: CalendarEvent;\n    newStart: Date;\n  }>();\n\n  @Output() dragEnter = new EventEmitter<{ date: Date }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef,\n  OnInit\n} from '@angular/core';\nimport {\n  WeekViewAllDayEvent,\n  WeekViewTimeEvent,\n  WeekViewHourColumn\n} from 'calendar-utils';\nimport { PlacementArray } from 'positioning';\nimport { EventEmitterService } from '../common/calendar-event-emitter.service';\n\n@Component({\n  selector: 'mwl-calendar-week-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\n      let-tooltipDisabled=\"tooltipDisabled\"\n      let-tooltipDelay=\"tooltipDelay\"\n      let-column=\"column\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        class=\"cal-event\"\n        [ngStyle]=\"{\n          backgroundColor: weekEvent.event.color?.secondary,'border-left': '5px solid',\n          'borderColor': '#867ff2'\n        }\"\n        [mwlCalendarTooltip]=\"\n          !tooltipDisabled\n            ? (weekEvent.event.title\n              | calendarEventTitle\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\n                : weekEvent.event)\n            : ''\n        \"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\n        [tooltipDelay]=\"tooltipDelay\"\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\n        tabindex=\"0\"\n        role=\"application\"\n        (click) = \"onEventClick(weekEvent.event)\"\n      >\n      <p class=\"week-event-title\">{{weekEvent.event.start | date:'shortTime'}}</p>\n      <p class=\"week-event-title\">{{weekEvent.event.title}}</p>\n        <mwl-calendar-event-actions\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventActionsTemplate\"\n        >\n        </mwl-calendar-event-actions>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody,\n        tooltipDisabled: tooltipDisabled,\n        tooltipDelay: tooltipDelay,\n        column: column,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewEventComponent implements OnInit {\n  @Input() locale: string;\n\n  @Input() weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent;\n\n  @Input() tooltipPlacement: PlacementArray;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() tooltipDisabled: boolean;\n\n  @Input() tooltipDelay: number | null;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Input() column: WeekViewHourColumn;\n\n  @Input() daysInWeek: number;\n\n  @Output() eventClicked = new EventEmitter<{\n    sourceEvent: MouseEvent | KeyboardEvent;\n  }>();\n\n  constructor(public eventEmitterService: EventEmitterService) {\n\n  }\n\n  ngOnInit() {\n  }\n\n  onEventClick(event) {\n    this.eventEmitterService.emitNavChangeEvent('EDIT_EVENT_CLICKED', event);\n  }\n}\n\n// [attr.aria-label]=\"\n// { event: weekEvent.event, locale: locale }\n//   | calendarA11y: 'eventDescription'\n// \"\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekViewHourSegment } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-week-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\"\n      let-segmentHeight=\"segmentHeight\"\n      let-isTimeLabel=\"isTimeLabel\"\n      let-daysInWeek=\"daysInWeek\"\n    >\n      <div\n        [attr.aria-hidden]=\"\n          {}\n            | calendarA11y\n              : (daysInWeek === 1\n                  ? 'hideDayHourSegment'\n                  : 'hideWeekHourSegment')\n        \"\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\"\n      >\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\n          {{\n            segment.displayDate\n              | calendarDate\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\n                : locale\n          }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale,\n        segmentHeight: segmentHeight,\n        isTimeLabel: isTimeLabel,\n        daysInWeek: daysInWeek\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHourSegmentComponent {\n  @Input() segment: WeekViewHourSegment;\n\n  @Input() segmentHeight: number;\n\n  @Input() locale: string;\n\n  @Input() isTimeLabel: boolean;\n\n  @Input() daysInWeek: number;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n","import {\n  Component,\n  Input,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\nimport { switchMapTo, startWith, map, switchMap } from 'rxjs/operators';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\n\n@Component({\n  selector: 'mwl-calendar-week-view-current-time-marker',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-columnDate=\"columnDate\"\n      let-dayStartHour=\"dayStartHour\"\n      let-dayStartMinute=\"dayStartMinute\"\n      let-dayEndHour=\"dayEndHour\"\n      let-dayEndMinute=\"dayEndMinute\"\n      let-isVisible=\"isVisible\"\n      let-topPx=\"topPx\"\n    >\n      <div\n        class=\"cal-current-time-marker\"\n        *ngIf=\"isVisible\"\n        [style.top.px]=\"topPx\"\n      ></div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        columnDate: columnDate,\n        dayStartHour: dayStartHour,\n        dayStartMinute: dayStartMinute,\n        dayEndHour: dayEndHour,\n        dayEndMinute: dayEndMinute,\n        isVisible: (marker$ | async)?.isVisible,\n        topPx: (marker$ | async)?.top\n      }\"\n    >\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewCurrentTimeMarkerComponent implements OnChanges {\n  @Input() columnDate: Date;\n\n  @Input() dayStartHour: number;\n\n  @Input() dayStartMinute: number;\n\n  @Input() dayEndHour: number;\n\n  @Input() dayEndMinute: number;\n\n  @Input() hourSegments: number;\n\n  @Input() hourSegmentHeight: number;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  private columnDate$ = new BehaviorSubject<Date>(this.columnDate);\n\n  marker$: Observable<{\n    isVisible: boolean;\n    top: number;\n  }> = this.zone.onStable.pipe(\n    switchMap(() => interval(60 * 1000)),\n    startWith(0),\n    switchMapTo(this.columnDate$),\n    map(columnDate => {\n      const startOfDay = this.dateAdapter.setMinutes(\n        this.dateAdapter.setHours(columnDate, this.dayStartHour),\n        this.dayStartMinute\n      );\n      const endOfDay = this.dateAdapter.setMinutes(\n        this.dateAdapter.setHours(columnDate, this.dayEndHour),\n        this.dayEndMinute\n      );\n      const hourHeightModifier =\n        (this.hourSegments * this.hourSegmentHeight) / 60;\n      const now = new Date();\n      return {\n        isVisible:\n          this.dateAdapter.isSameDay(columnDate, now) &&\n          now >= startOfDay &&\n          now <= endOfDay,\n        top:\n          this.dateAdapter.differenceInMinutes(now, startOfDay) *\n          hourHeightModifier\n      };\n    })\n  );\n\n  constructor(private dateAdapter: DateAdapter, private zone: NgZone) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.columnDate) {\n      this.columnDate$.next(changes.columnDate.currentValue);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarWeekViewComponent } from './calendar-week-view.component';\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view-header.component';\nimport { CalendarWeekViewEventComponent } from './calendar-week-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport { CalendarWeekViewHourSegmentComponent } from './calendar-week-view-hour-segment.component';\nimport { CalendarWeekViewCurrentTimeMarkerComponent } from './calendar-week-view-current-time-marker.component';\nimport { MatDialogRef } from '@angular/material/dialog';\nexport {\n  CalendarWeekViewComponent,\n  CalendarWeekViewBeforeRenderEvent\n} from './calendar-week-view.component';\nexport {\n  WeekViewAllDayEvent as CalendarWeekViewAllDayEvent,\n  WeekViewAllDayEventRow as CalendarWeekViewAllDayEventRow,\n  GetWeekViewArgs as CalendarGetWeekViewArgs\n} from 'calendar-utils';\nexport { getWeekViewPeriod } from '../common/util';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule,\n  ],\n  declarations: [\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent,\n    CalendarWeekViewCurrentTimeMarkerComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent,\n    CalendarWeekViewHourSegmentComponent,\n    CalendarWeekViewCurrentTimeMarkerComponent\n  ],\n  providers: [{\n    provide: MatDialogRef,\n  }\n],\n})\nexport class CalendarWeekModule { }\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { Subject } from 'rxjs';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { PlacementArray } from 'positioning';\nimport { CalendarWeekViewBeforeRenderEvent } from '../week/calendar-week.module';\n\nexport type CalendarDayViewBeforeRenderEvent = CalendarWeekViewBeforeRenderEvent;\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-day-view',\n  template: `\n    <mwl-calendar-week-view\n      class=\"cal-day-view\"\n      [daysInWeek]=\"1\"\n      [viewDate]=\"viewDate\"\n      [events]=\"events\"\n      [hourSegments]=\"hourSegments\"\n      [hourSegmentHeight]=\"hourSegmentHeight\"\n      [dayStartHour]=\"dayStartHour\"\n      [dayStartMinute]=\"dayStartMinute\"\n      [dayEndHour]=\"dayEndHour\"\n      [dayEndMinute]=\"dayEndMinute\"\n      [refresh]=\"refresh\"\n      [locale]=\"locale\"\n      [eventSnapSize]=\"eventSnapSize\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\n      [tooltipDelay]=\"tooltipDelay\"\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\n      [eventTemplate]=\"eventTemplate\"\n      [eventTitleTemplate]=\"eventTitleTemplate\"\n      [eventActionsTemplate]=\"eventActionsTemplate\"\n      [snapDraggedEvents]=\"snapDraggedEvents\"\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\n      (eventClicked)=\"eventClicked.emit($event)\"\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\n    ></mwl-calendar-week-view>\n  `\n})\nexport class CalendarDayViewComponent {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input() eventSnapSize: number;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: PlacementArray = 'auto';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\n   * will be displayed immediately.\n   */\n  @Input() tooltipDelay: number | null = null;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event actions\n   */\n  @Input() eventActionsTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to snap events to a grid when dragging\n   */\n  @Input() snapDraggedEvents: boolean = true;\n\n  /**\n   * A custom template to use for the all day events label text\n   */\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the current time marker\n   */\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output() eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output() hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output() eventTimesChanged = new EventEmitter<\n    CalendarEventTimesChangedEvent\n  >();\n\n  /**\n   * An output that will be called before the view is rendered for the current day.\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n   */\n  @Output() beforeViewRender = new EventEmitter<\n    CalendarDayViewBeforeRenderEvent\n  >();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalendarDayViewComponent } from './calendar-day-view.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport { CalendarWeekModule } from '../week/calendar-week.module';\n\nexport {\n  CalendarDayViewComponent,\n  CalendarDayViewBeforeRenderEvent\n} from './calendar-day-view.component';\n\n@NgModule({\n  imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\n  declarations: [CalendarDayViewComponent],\n  exports: [CalendarDayViewComponent]\n})\nexport class CalendarDayModule {}\n","import { Component, OnInit, Inject, OnChanges } from '@angular/core';\nimport { FormGroup, FormControl,Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EventEmitterService } from '../common/calendar-event-emitter.service';\n// import {moment} from 'moment';\n\n@Component({\n  selector: 'app-calendar-modal',\n  templateUrl: './calendar-modal.component.html',\n  styleUrls: ['./calendar-modal.component.scss']\n})\nexport class CalendarModalComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<CalendarModalComponent>,\n    public eventEmitterService: EventEmitterService,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { \n    \n  }\n  screenType = \"add\";\n  title = this.data ? \"Edit Event\" : \"Add Event\";\n  titlePlaceholder = this.data ? \"Edit Title\" : \"Add Title\";\n  locationPlaceholder = this.data ? \"Edit Location\" : \"Add Location\";\n  descriptionPlaceholder = this.data ? \"Edit Description\" : \"Add Description\";\n\n  addEvents = new FormGroup({\n    title: new FormControl('', Validators.required),\n    location: new FormControl(),\n    description: new FormControl(),\n    fromDate: new FormControl('', Validators.required),\n    toDate: new FormControl('', Validators.required),\n    fromTime: new FormControl('', Validators.required),\n    toTime: new FormControl(),\n  });\n\n  ngOnInit() {\n    \n    if(this.data){\n      this.assignEventDetails();\n    }\n\n  }\n\n  assignEventDetails(){\n    this.screenType = \"edit\";\n    this.addEvents.controls['title'].setValue(this.data.title);\n    this.addEvents.controls['location'].setValue(this.data.location);\n    this.addEvents.controls['description'].setValue(this.data.description);\n    this.addEvents.controls['fromDate'].setValue(this.data.start);\n    this.addEvents.controls['toDate'].setValue(this.data.end);\n    this.addEvents.controls['fromTime'].setValue(this.data.fromTime);\n    this.addEvents.controls['toTime'].setValue(this.data.toTime);\n\n    console.log(\"this.addEvents\", this.addEvents)\n  }\n\n  addOrUpdateEvent() {\n    let tempObject = {\n      title: this.addEvents.controls['title'].value,\n      description: this.addEvents.controls['description'].value,\n      location: this.addEvents.controls['location'].value,\n      start: this.addEvents.controls['fromDate'].value,\n      end: this.addEvents.controls['toDate'].value,\n      fromTime: this.addEvents.controls['fromTime'].value,\n      toTime: this.addEvents.controls['toTime'].value\n    };\n    if(this.data === null){\n      this.eventEmitterService.emitNavChangeEvent('ADD_SAVE_CLICKED', tempObject);\n    }else {\n      this.eventEmitterService.emitNavChangeEvent('EDIT_SAVE_CLICKED', tempObject);\n    }\n    this.dialogRef.close();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onDelete() {\n    this.eventEmitterService.emitNavChangeEvent('DELETE_EVENT_CLICKED', this.data);\n    this.dialogRef.close();\n  }\n\n\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarView } from '../common/calendar-view.enum';\nimport { validateEvents, getWeekViewPeriod } from '../common/util';\nimport { DateAdapter } from '../../date-adapters/date-adapter';\nimport { addDaysWithExclusions } from '../common/util';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod\n} from 'calendar-utils';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CalendarModalComponent } from '../calendar-modal/calendar-modal.component';\nimport { EventEmitterService } from '../common/calendar-event-emitter.service';\n\n@Component({\n  selector: 'mwl-calendar-header',\n  styleUrls: ['./calendar-header.component.scss'],\n  template: `  \n  <div>\n  <h1 class=\"calendar-header-text\">Calendar </h1> \n  <div class=\"header-container\">\n     \n    <div class=\"header-view\">\n      <div>\n        <mat-button-toggle-group id=\"today-toggle-group\" name=\"fontStyle\" aria-label=\"Font Style\"\n        #group=\"matButtonToggleGroup\">\n        <mat-button-toggle class=\"previous-button\" id=\"toggle-button\" \n          *ngIf=\"showPreviousDayBtn\"\n          mwlCalendarPreviousView \n          [(viewDate)]=\"viewDate\" \n          [view]=\"view\" \n          (viewDateChange)=\"onViewDateChange('Previous')\" \n          (viewChange)=\"onViewChange()\" \n          [daysInWeek]=\"daysInWeek\" \n          [excludeDays]=\"excludeDays\">\n          Previous\n        </mat-button-toggle>\n        <mat-button-toggle id=\"toggle-button\" \n        *ngIf=\"showTodayBtn\"\n                mwlCalendarToday \n                [(viewDate)]=\"viewDate\" \n                (viewDateChange)=\"viewDateChange.next(viewDate)\">\n        Today\n        </mat-button-toggle>\n        <mat-button-toggle id=\"toggle-button\" \n        *ngIf=\"showNextDayBtn\"\n                mwlCalendarNextView \n                [view]=\"view\" \n                [(viewDate)]=\"viewDate\" \n                (viewDateChange)=\"onViewDateChange('Next')\" \n                (viewChange)=\"onViewChange()\" \n                [daysInWeek]=\"daysInWeek\" \n                [excludeDays]=\"excludeDays\">\n        Next\n        </mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n      \n      <button class=\"event-button\" *ngIf=\"showAddEvent\" (click)=\"addEventClick()\" mat-raised-button><mat-icon class=\"add-icon-view\">add</mat-icon> Add Event</button>\n    </div>\n    <div class=\"date-view-container\">\n      <mat-icon mwlCalendarPreviousView \n      [(viewDate)]=\"viewDate\" \n      [view]=\"view\" \n      (viewDateChange)=\"onViewDateChange('Previous')\" \n      (viewChange)=\"onViewChange()\" \n      [daysInWeek]=\"daysInWeek\" \n      [excludeDays]=\"excludeDays\">arrow_left</mat-icon>\n      <h3 class=\"date-view\">{{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}</h3>\n      <mat-icon mwlCalendarNextView \n      [view]=\"view\" \n      [(viewDate)]=\"viewDate\" \n      (viewDateChange)=\"onViewDateChange('Next')\" \n      (viewChange)=\"onViewChange()\" \n      [daysInWeek]=\"daysInWeek\" \n      [excludeDays]=\"excludeDays\">arrow_right</mat-icon>\n    </div>\n    <div>\n      <mat-button-toggle-group class=\"day-toggle-view\" id=\"toggle-group\" name=\"fontStyle\" aria-label=\"Font Style\" #group=\"matButtonToggleGroup\">\n        <mat-button-toggle class=\"day-view\" id=\"toggle-button\" *ngIf=\"showDayBtn\" (click)=\"onSetView('day')\" [checked]=\"view === 'day'\">Day</mat-button-toggle>\n        <mat-button-toggle id=\"toggle-button\" *ngIf=\"showWeekBtn\" (click)=\"onSetView('week')\" [checked]=\"view === 'week'\">Week</mat-button-toggle>\n        <mat-button-toggle id=\"toggle-button\" *ngIf=\"showMonthBtn\" (click)=\"onSetView('month')\" [checked]=\"view === 'month'\">Month</mat-button-toggle>\n      </mat-button-toggle-group>\n    </div>\n</div>\n</div>\n  `\n})\nexport class CalendarCommonHeaderComponent implements OnInit {\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\n\n  /**\n   * Days to skip when going back by 1 day\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * The number of days in a week. If set will subtract this amount of days instead of 1 week\n   */\n  @Input() daysInWeek: number;\n  @Input() weekStartsOn: number;\n  @Input() weekendDays: number[];\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange = new EventEmitter();\n\n  @Output() viewChange = new EventEmitter();\n  @Output() setView = new EventEmitter();\n  @Output() onAddEventClick = new EventEmitter();\n  @Output() onEditEventClick = new EventEmitter();\n  @Output() onDeleteEventClick = new EventEmitter();\n  @Output() onAddEventSaveClick = new EventEmitter();\n\n  @Input() showPreviousDayBtn: boolean = true;\n  @Input() showTodayBtn: boolean = true;\n  @Input() showNextDayBtn: boolean = true;\n\n  @Input() showMonthBtn: boolean = true;\n  @Input() showWeekBtn: boolean = true;\n  @Input() showDayBtn: boolean = true;\n\n  @Input() showAddEvent: boolean = true;\n  @Input() showCaptureEventDialog: boolean = true;\n  @Input() showEventDetailsDialog: boolean = true;\n  @Input() customCaptureEventDialog: TemplateRef<any>;\n  @Input() customEventDialog: TemplateRef<any>;\n\n  columnHeaders: any;\n  events: CalendarEvent<any>[];\n  beforeViewRender: any;\n  page = \"header\";\n\n  constructor(private dateAdapter: DateAdapter,\n    public eventEmitterService: EventEmitterService,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.view = this.view;\n    this.setView.emit(this.view);\n    this.eventEmitterService.getNavChangeEmitter().subscribe((data) => {\n      switch (data.value) {\n        case 'EDIT_EVENT_CLICKED':\n          this.openDialog('EDIT', data.event);\n          break;\n        case 'ADD_SAVE_CLICKED':\n          this.addEventSaveClick(data.event);\n          break;\n        case 'EDIT_SAVE_CLICKED':\n          this.editEventSaveClick(data.event);\n          break;\n        case 'DELETE_EVENT_CLICKED':\n          this.deleteEventClick(data.event);\n          break;\n        default:\n      }\n    });\n  }\n\n  onViewChange() {\n    this.viewChange.emit();\n  }\n\n  onViewDateChange(type) {\n    if (type === 'Previous') {\n      const subFn: any = {\n        day: this.dateAdapter.subDays,\n        week: this.dateAdapter.subWeeks,\n        month: this.dateAdapter.subMonths\n      }[this.view];\n      if (this.view === CalendarView.Day) {\n        this.viewDateChange.emit(\n          addDaysWithExclusions(\n            this.dateAdapter,\n            this.viewDate,\n            0,\n            this.excludeDays\n          )\n        );\n      } else if (this.view === CalendarView.Week && this.daysInWeek) {\n        this.viewDateChange.emit(\n          addDaysWithExclusions(\n            this.dateAdapter,\n            this.viewDate,\n            0,\n            this.excludeDays\n          )\n        );\n      } else {\n        this.viewDateChange.emit(subFn(this.viewDate, 0));\n      }\n    } else if (type === 'Next') {\n      const addFn: any = {\n        day: this.dateAdapter.addDays,\n        week: this.dateAdapter.addWeeks,\n        month: this.dateAdapter.addMonths\n      }[this.view];\n      if (this.view === CalendarView.Day) {\n        this.viewDateChange.emit(\n          addDaysWithExclusions(\n            this.dateAdapter,\n            this.viewDate,\n            0,\n            this.excludeDays\n          )\n        );\n      } else if (this.view === CalendarView.Week && this.daysInWeek) {\n        this.viewDateChange.emit(\n          addDaysWithExclusions(\n            this.dateAdapter,\n            this.viewDate,\n            this.daysInWeek,\n            this.excludeDays\n          )\n        );\n      } else {\n        this.viewDateChange.emit(addFn(this.viewDate, 0));\n      }\n    }\n  }\n\n  onSetView(view) {\n    this.view = view;\n    this.setView.emit(view);\n  }\n\n  addEventClick() {\n    this.onAddEventClick.emit();\n    this.openDialog('ADD', null);\n  }\n\n  addEventSaveClick(event) {\n    this.onAddEventSaveClick.emit(event);\n  }\n\n  editEventSaveClick(event) {\n    this.onEditEventClick.emit(event);\n  }\n\n  deleteEventClick(event) {\n    this.onDeleteEventClick.emit(event);\n  }\n\n  openDialog(type, data) {\n    let template: any = null\n    if (type === 'EDIT') {\n      if (this.showEventDetailsDialog === true) {\n        template = CalendarModalComponent;\n      } else if (this.customEventDialog !== undefined) {\n        template = this.customEventDialog\n      }\n    }\n    else if (type === 'ADD') {\n      if (this.showCaptureEventDialog === true) {\n        template = CalendarModalComponent;\n      } else if (this.customCaptureEventDialog !== undefined) {\n        template = this.customCaptureEventDialog;\n      }\n    }\n    if (template !== null) {\n      const dialogRef = this.dialog.open(template, {\n        data: data\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CalendarModalComponent } from './calendar-modal.component';\r\nimport { CalendarCommonModule } from '../common/calendar-common.module';\r\nimport { CalendarWeekModule } from '../week/calendar-week.module';\r\nimport { MatIconModule, MatFormFieldModule, MatInputModule,\r\n   MatDatepickerModule, MatNativeDateModule, MatToolbarModule } from '@angular/material';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatDialogModule, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\r\n\r\nexport {\r\n    CalendarModalComponent\r\n} from './calendar-modal.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, \r\n    CalendarCommonModule, \r\n    CalendarWeekModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,   \r\n    MatNativeDateModule ,  \r\n    MatDatepickerModule,\r\n    ReactiveFormsModule, \r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatToolbarModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  providers: [\r\n    { provide: MAT_DIALOG_DATA, useValue: {} },\r\n    { provide: MatDialogRef, useValue: {} }\r\n    \r\n ],\r\n  declarations: [CalendarModalComponent],\r\n  exports: [CalendarModalComponent],\r\n})\r\nexport class CalendarCommonModalModule {}\r\n","import { NgModule,CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CalendarCommonHeaderComponent } from './calendar-header.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\nimport { CalendarWeekModule } from '../week/calendar-week.module';\nimport { CalendarCommonModalModule } from '../calendar-modal/calendar-modal.module';\nimport { CalendarModalComponent } from \"../calendar-modal/calendar-modal.component\"\nimport { EventEmitterService } from '../common/calendar-event-emitter.service';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nexport {\n  CalendarCommonHeaderComponent\n} from './calendar-header.component';\n\n@NgModule({\n  imports: [\n    CommonModule, \n    CalendarCommonModule,\n    CalendarWeekModule, \n    CalendarCommonModalModule,\n    MatButtonModule,\n    MatIconModule,\n    MatButtonToggleModule\n  ],\n  declarations: [CalendarCommonHeaderComponent,\n  ],\n  providers: [\n    EventEmitterService\n  ],\n  entryComponents: [CalendarModalComponent],\n  exports: [CalendarCommonHeaderComponent],\n  schemas: [ CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class CalendarCommonHeaderModule { }\n","import { adapterFactory as baseAdapterFactory } from 'calendar-utils/date-adapters/date-fns';\nimport {\n  addWeeks,\n  addMonths,\n  subDays,\n  subWeeks,\n  subMonths,\n  getISOWeek,\n  setDate,\n  setMonth,\n  setYear,\n  getDate,\n  getYear\n} from 'date-fns';\nimport { DateAdapter } from '../date-adapter';\n\nexport function adapterFactory(): DateAdapter {\n  return {\n    ...baseAdapterFactory(),\n    addWeeks,\n    addMonths,\n    subDays,\n    subWeeks,\n    subMonths,\n    getISOWeek,\n    setDate,\n    setMonth,\n    setYear,\n    getDate,\n    getYear\n  };\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport {\n  CalendarCommonModule,\n  CalendarModuleConfig,\n  CalendarUtils,\n  CalendarEventTitleFormatter,\n  CalendarDateFormatter,\n  CalendarA11y,\n  DateAdapter\n} from './common/calendar-common.module';\nimport { CalendarMonthModule } from './month/calendar-month.module';\nimport { CalendarWeekModule } from './week/calendar-week.module';\nimport { CalendarDayModule } from './day/calendar-day.module';\nimport { CalendarCommonHeaderModule } from './header/calendar-header.module';\nimport { CalendarCommonModalModule } from './calendar-modal/calendar-modal.module';\nimport { MatIconModule } from '@angular/material/icon';\nimport { adapterFactory } from '../date-adapters/date-fns';\n\nexport * from './common/calendar-common.module';\nexport * from './month/calendar-month.module';\nexport * from './week/calendar-week.module';\nexport * from './day/calendar-day.module';\nexport * from './header/calendar-header.module';\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  imports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule,\n    CalendarCommonHeaderModule,\n    CalendarCommonModalModule,\n    MatIconModule,\n    CalendarCommonModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }) \n  ],\n  exports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule,\n    CalendarCommonHeaderModule,\n    CalendarCommonModalModule,\n  ],\n  providers: [CalendarEventTitleFormatter,CalendarDateFormatter,CalendarA11y,CalendarUtils],\n})\n\nexport class CalendarModule {}\n\n"]}